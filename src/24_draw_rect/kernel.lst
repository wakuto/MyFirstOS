     1                                  %include "../include/define.s"
     2                              <1>     SECT_SIZE equ (512)                     ; セクタサイズ
     3                              <1> 
     4                              <1>     BOOT_SIZE equ (1024 * 8)                ; ブートコードサイズ
     5                              <1>     KERNEL_SIZE equ (1024 * 8)              ; カーネルサイズ
     6                              <1> 
     7                              <1>     KERNEL_LOAD equ 0x0010_1000             ; カーネルのロード位置
     8                              <1> 
     9                              <1>     E820_RECORD_SIZE equ 20
    10                              <1> 
    11                              <1>     BOOT_LOAD equ 0x7C00                    ; ブートプログラムのロード位置
    12                              <1>     BOOT_END equ (BOOT_LOAD + BOOT_SIZE)    ; ブートコードの終了位置
    13                              <1> 
    14                              <1>     BOOT_SECT equ (BOOT_SIZE / SECT_SIZE)   ; ブートコードのセクタ数
    15                              <1>     KERNEL_SECT equ (KERNEL_SIZE / SECT_SIZE)   ; カーネルのセクタ数
     2                                  %include "../include/macro.s"
     3                              <1> ; C言語と同等の関数呼び出し
     4                              <1> %macro cdecl 1-*.nolist ; 可変引数, リスト出力の抑止
     5                              <1> 
     6                              <1>     %rep %0 - 1         ; 引数の数-1回
     7                              <1>         push %{-1:-1}   ; 一番最後の引数
     8                              <1>         %rotate -1      ; 一番最後の引数を先頭に移動
     9                              <1>     %endrep
    10                              <1>     %rotate -1      ; 回転をもとに戻す
    11                              <1> 
    12                              <1>     call %1         ; 第１引数を呼び出し
    13                              <1> 
    14                              <1>     %if 1 < %0
    15                              <1>         add sp, (__BITS__ >> 3) * (%0 - 1)  ; cpuのbyte数(bit数/8) * 引数の数-1
    16                              <1>     %endif
    17                              <1> %endmacro
    18                              <1> 
    19                              <1> struc drive
    20 00000000 ????                <1>     .no resw 1      ; ドライブ番号
    21 00000002 ????                <1>     .cyln resw 1    ; シリンダ
    22 00000004 ????                <1>     .head resw 1    ; ヘッド
    23 00000006 ????                <1>     .sect resw 1    ; セクタ
    24                              <1> endstruc
     3                                  
     4                                      ORG KERNEL_LOAD
     5                                  
     6                                  [BITS 32]   ; 32bitコードを生成
     7                                  
     8                                  ; エントリポイント
     9                                  kernel:
    10                                      ; フォントアドレスを取得
    11 00000000 BE007E0000                  mov esi, BOOT_LOAD + SECT_SIZE  ; 0x7C00 + 512  フォントアドレス
    12 00000005 0FB706                      movzx eax, word [esi + 0]       ; FONT.seg  セグメント
    13 00000008 0FB75E02                    movzx ebx, word [esi + 2]       ; FONT.off  オフセット
    14 0000000C C1E004                      shl eax, 4
    15 0000000F 01D8                        add eax, ebx
    16 00000011 A3[B0000000]                mov [FONT_ADR], eax
    17                                  
    18 00000016 6A0D6A3FE810020000-         cdecl draw_font, 63, 13         ; フォント一覧表示
    18 0000001F 6683C408           
    19 00000023 6A046A3FE88F020000-         cdecl draw_color_bar, 63, 4     ; カラーバーを表示
    19 0000002C 6683C408           
    20 00000030 68[9D000000]680F01-         cdecl draw_str, 25, 14, 0x010F, .s0 ; 文字の表示
    20 00000038 00006A0E6A19E82F02-
    20 00000041 00006683C410       
    21                                  
    22                                      ; 矩形を描画
    23 00000047 6A0368C800000068C8-         cdecl draw_rect, 100, 100, 200, 200, 0x03
    23 00000050 0000006A646A64E84E-
    23 00000059 0400006683C414     
    24 00000060 6A0568960000006896-         cdecl draw_rect, 400, 250, 150, 150, 0x05
    24 00000069 00000068FA00000068-
    24 00000072 90010000E82F040000-
    24 0000007B 6683C414           
    25 0000007F 6A066A64682C010000-         cdecl draw_rect, 350, 400, 300, 100, 0x06
    25 00000088 6890010000685E0100-
    25 00000091 00E8130400006683C4-
    25 0000009A 14                 
    26                                      
    27                                  
    28                                      ; 処理の終了
    29 0000009B EBFE                        jmp $
    30                                  
    31 0000009D 2048656C6C6F2C206B-     .s0 db " Hello, kernel! ", 0
    31 000000A6 65726E656C212000   
    32                                  
    33 000000AE 00<rep 2h>              ALIGN 4, db 0
    34 000000B0 00000000                FONT_ADR: dd 0
    35                                  
    36                                  ; モジュール
    37                                  %include "../modules/protect/vga.s"
    38                              <1> vga_set_read_plane:     ; void vga_set_read_plane(plane);
    39                              <1> ; plane: 読み込みプレーン
    40 000000B4 55                  <1>     push ebp
    41 000000B5 89E5                <1>     mov ebp, esp
    42                              <1> 
    43 000000B7 6650                <1>     push ax
    44 000000B9 6652                <1>     push dx
    45                              <1> 
    46                              <1> 
    47                              <1>     ; 読み込みプレーンの選択
    48 000000BB 8A6508              <1>     mov ah, [ebp + 8]   ; 3=輝度, 2～0=RGB
    49 000000BE 80E403              <1>     and ah, 0x03        ; 余計なビットをマスク
    50 000000C1 B004                <1>     mov al, 0x04        ; 読み込みマップ選択レジスタ
    51 000000C3 66BACE03            <1>     mov dx, 0x03CE      ; グラフィックス制御ポート
    52 000000C7 66EF                <1>     out dx, ax
    53                              <1> 
    54 000000C9 665A                <1>     pop dx
    55 000000CB 6658                <1>     pop ax
    56                              <1> 
    57 000000CD 89EC                <1>     mov esp, ebp
    58 000000CF 5D                  <1>     pop ebp
    59                              <1> 
    60 000000D0 C3                  <1>     ret
    61                              <1> 
    62                              <1> vga_set_write_plane:    ; void vga_set_write_plane(plane);
    63                              <1> ; plane 書き込みプレーン
    64 000000D1 55                  <1>     push ebp
    65 000000D2 89E5                <1>     mov ebp, esp
    66                              <1> 
    67 000000D4 6650                <1>     push ax
    68 000000D6 6652                <1>     push dx
    69                              <1> 
    70                              <1> 
    71                              <1>     ; 書き込みプレーンの選択
    72 000000D8 8A6508              <1>     mov ah, [ebp + 8]   ; ah = 書き込みプレーン
    73 000000DB 80E40F              <1>     and ah, 0x0F        ; 余計なビットをマスク
    74 000000DE B002                <1>     mov al, 0x02        ; マップマスクレジスタ（書き込みプレーンを指定）
    75 000000E0 66BAC403            <1>     mov dx, 0x03C4      ; シーケンサ制御ポート
    76 000000E4 66EF                <1>     out dx, ax
    77                              <1> 
    78                              <1> 
    79 000000E6 665A                <1>     pop dx
    80 000000E8 6658                <1>     pop ax
    81                              <1> 
    82 000000EA 89EC                <1>     mov esp, ebp
    83 000000EC 5D                  <1>     pop ebp
    84                              <1> 
    85 000000ED C3                  <1>     ret
    86                              <1> 
    87                              <1> vram_font_copy:         ; void vram_font_copy(font, vram, plane, color);
    88                              <1> ; font FONTアドレス
    89                              <1> ; vram VRAMアドレス
    90                              <1> ; plane 出力プレーン（1つのプレーンのみをビットで指定）
    91                              <1> ; color 描画色 背景色(----IRGB):前景色(---TIRGB) T=透過, I=輝度
    92 000000EE 55                  <1>     push ebp
    93 000000EF 89E5                <1>     mov ebp, esp
    94                              <1>     
    95 000000F1 50                  <1>     push eax
    96 000000F2 53                  <1>     push ebx
    97 000000F3 51                  <1>     push ecx
    98 000000F4 52                  <1>     push edx
    99 000000F5 57                  <1>     push edi
   100 000000F6 56                  <1>     push esi
   101                              <1> 
   102 000000F7 8B7508              <1>     mov esi, [ebp + 8]          ; font
   103 000000FA 8B7D0C              <1>     mov edi, [ebp + 12]         ; vram
   104 000000FD 0FB64510            <1>     movzx eax, byte [ebp + 16]  ; plane
   105 00000101 0FB75D14            <1>     movzx ebx, word [ebp + 20]  ; color
   106                              <1>     ; bh = 背景色 bl = 前景色
   107                              <1> 
   108 00000105 84C7                <1>     test bh, al     ; zf = (背景色 & プレーン）
   109 00000107 0F94C6              <1>     setz dh         ; dh = zf
   110 0000010A FECE                <1>     dec dh          ; 背景色が含まれる：dh = 0xFF, 含まれない：dh = 0x00
   111                              <1> 
   112 0000010C 84C3                <1>     test bl, al     ; zf = （前景色 & プレーン）
   113 0000010E 0F94C2              <1>     setz dl         ; dl = zf
   114 00000111 FECA                <1>     dec dl          ; 前景色が含まれる：dl = 0xFF, 含まれない：dl = 0x00
   115                              <1> 
   116                              <1>     ; 16ドットフォントのコピー
   117 00000113 FC                  <1>     cld             ; アドレス加算モード
   118                              <1> 
   119 00000114 B910000000          <1>     mov ecx, 16
   120                              <1> .10L:
   121                              <1>     ; フォントマスクの作成
   122 00000119 AC                  <1>     lodsb           ; al = *(esi++) // フォントデータ1ビット分
   123 0000011A 88C4                <1>     mov ah, al      ; ah ~= al      // !フォントデータ
   124 0000011C F6D4                <1>     not ah
   125                              <1> 
   126                              <1>     ; 前景色
   127 0000011E 20D0                <1>     and al, dl      ; al = プレーン&前景色ありorなし
   128                              <1> 
   129                              <1>     ; 背景色
   130 00000120 F7C310000000        <1>     test ebx, 0x0010    ; if(透過on) zf = 0; else zf = 1;
   131 00000126 7404                <1>     jz .11F
   132                              <1>     ; 透過on
   133 00000128 2227                <1>     and ah, [edi]       ; 現在のデータでフォントデータをマスク
   134 0000012A EB02                <1>     jmp .11E
   135                              <1> .11F:                   ; 透過off
   136 0000012C 20F4                <1>     and ah, dh          ; if(背景色なし) ah = 0;
   137                              <1> .11E:
   138                              <1>     
   139                              <1>     ; 前景色と背景色を合成
   140 0000012E 08E0                <1>     or al, ah           ; al = 背景 | 前景
   141                              <1> 
   142                              <1>     ; 新しい値を出力
   143 00000130 8807                <1>     mov [edi], al
   144                              <1> 
   145 00000132 83C750              <1>     add edi, 80      ; 1行すすめる
   146 00000135 E2E2                <1>     loop .10L
   147                              <1> .10E:
   148                              <1> 
   149 00000137 5E                  <1>     pop esi
   150 00000138 5F                  <1>     pop edi
   151 00000139 5A                  <1>     pop edx
   152 0000013A 59                  <1>     pop ecx
   153 0000013B 5B                  <1>     pop ebx
   154 0000013C 58                  <1>     pop eax
   155                              <1> 
   156 0000013D 89EC                <1>     mov esp, ebp
   157 0000013F 5D                  <1>     pop ebp
   158                              <1> 
   159 00000140 C3                  <1>     ret
   160                              <1> 
   161                              <1> vram_bit_copy:         ; void vram_bit_copy(bit, vram, plane, color);
   162                              <1> ; bitデータ
   163                              <1> ; vram VRAMアドレス
   164                              <1> ; plane 出力プレーン（1つのプレーンのみをビットで指定）
   165                              <1> ; color 描画色 前景色(--------_----IRGB) I=輝度
   166 00000141 55                  <1>     push ebp
   167 00000142 89E5                <1>     mov ebp, esp
   168                              <1>     
   169 00000144 50                  <1>     push eax
   170 00000145 53                  <1>     push ebx
   171 00000146 52                  <1>     push edx
   172 00000147 57                  <1>     push edi
   173                              <1> 
   174 00000148 8B7D0C              <1>     mov edi, [ebp + 12]         ; vram
   175 0000014B 0FB64510            <1>     movzx eax, byte [ebp + 16]  ; plane
   176 0000014F 0FB75D14            <1>     movzx ebx, word [ebp + 20]  ; color
   177                              <1>     ; bl = 前景色
   178                              <1> 
   179                              <1>     ; 常に透過モード
   180 00000153 84C3                <1>     test bl, al     ; zf = （前景色 & プレーン）
   181 00000155 0F94C3              <1>     setz bl         ; dl = zf
   182 00000158 FECB                <1>     dec bl          ; 前景色が含まれる：dl = 0xFF, 含まれない：dl = 0x00
   183                              <1> 
   184                              <1>     ; マスク
   185 0000015A 8A4508              <1>     mov al, [ebp + 8]   ; bit
   186 0000015D 88C4                <1>     mov ah, al      ; ah ~= al
   187 0000015F F6D4                <1>     not ah
   188                              <1> 
   189 00000161 2227                <1>     and ah, [edi]       ; !出力ビットパターン & 現在値 出力ビットだけ0 背景
   190 00000163 20D8                <1>     and al, bl          ;  出力ビットパターン & 表示色 前景
   191 00000165 08E0                <1>     or al, ah           ; 背景と前景を合成
   192 00000167 8807                <1>     mov [edi], al       ; プレーンに書き込み
   193                              <1>     
   194                              <1> 
   195 00000169 5F                  <1>     pop edi
   196 0000016A 5A                  <1>     pop edx
   197 0000016B 5B                  <1>     pop ebx
   198 0000016C 58                  <1>     pop eax
   199                              <1> 
   200 0000016D 89EC                <1>     mov esp, ebp
   201 0000016F 5D                  <1>     pop ebp
   202                              <1> 
   203 00000170 C3                  <1>     ret
    38                                  %include "../modules/protect/draw_char.s"
    39                              <1> draw_char:      ; void draw_char(col, row, color, ch);
    40                              <1> ; col 列（0～79）
    41                              <1> ; row 行（0～29）
    42                              <1> ; color 描画色 背景色(----IRGB):前景色(---TIRGB) T=透過, I=輝度
    43                              <1> ; ch 文字
    44                              <1> 
    45 00000171 55                  <1>     push ebp
    46 00000172 89E5                <1>     mov ebp, esp
    47                              <1> 
    48 00000174 53                  <1>     push ebx
    49 00000175 56                  <1>     push esi
    50 00000176 57                  <1>     push edi
    51                              <1> 
    52                              <1>     ; コピー元フォントアドレスを設定
    53 00000177 0FB67514            <1>     movzx esi, byte [ebp +20]  ; esi = ch
    54 0000017B C1E604              <1>     shl esi, 4                  ; ch * 16   1文字16バイト
    55 0000017E 0335[B0000000]      <1>     add esi, [FONT_ADR]         ; ESI = フォントアドレス
    56                              <1> 
    57                              <1>     ; コピー先アドレスを取得
    58                              <1>     ; adr = 0xA0000 + (640 / 8 * 16) * y + x
    59                              <1>     ;               16行(1文字の高さ）  *  縦位置 + 横位置
    60 00000184 8B7D0C              <1>     mov edi, [ebp +12]                  ; Y
    61 00000187 C1E708              <1>     shl edi, 8
    62 0000018A 8DBCBF00000A00      <1>     lea edi, [edi * 4 + edi + 0xA0000]  ; Y * 16行
    63 00000191 037D08              <1>     add edi, [ebp + 8]                  ; edi += X
    64                              <1> 
    65                              <1>     ; 1文字分のフォントを出力
    66 00000194 0FB75D10            <1>     movzx ebx, word [ebp +16]           ; 表示色
    67                              <1> 
    68                              <1>     ; 輝度I
    69 00000198 6A03E815FFFFFF6683- <1>     cdecl vga_set_read_plane, 0x03      ; 輝度プレーン
    69 000001A1 C404                <1>
    70 000001A3 6A08E827FFFFFF6683- <1>     cdecl vga_set_write_plane, 0x08     ; 輝度プレーン
    70 000001AC C404                <1>
    71 000001AE 536A085756E836FFFF- <1>     cdecl vram_font_copy, esi, edi, 0x08, ebx
    71 000001B7 FF6683C410          <1>
    72                              <1> 
    73                              <1>     ; 赤R
    74 000001BC 6A02E8F1FEFFFF6683- <1>     cdecl vga_set_read_plane, 0x02      ; 赤プレーン
    74 000001C5 C404                <1>
    75 000001C7 6A04E803FFFFFF6683- <1>     cdecl vga_set_write_plane, 0x04     ; 赤輝度プレーン
    75 000001D0 C404                <1>
    76 000001D2 536A045756E812FFFF- <1>     cdecl vram_font_copy, esi, edi, 0x04, ebx
    76 000001DB FF6683C410          <1>
    77                              <1> 
    78                              <1>     ; 緑G
    79 000001E0 6A01E8CDFEFFFF6683- <1>     cdecl vga_set_read_plane, 0x01      ; 緑プレーン
    79 000001E9 C404                <1>
    80 000001EB 6A02E8DFFEFFFF6683- <1>     cdecl vga_set_write_plane, 0x02     ; 緑プレーン
    80 000001F4 C404                <1>
    81 000001F6 536A025756E8EEFEFF- <1>     cdecl vram_font_copy, esi, edi, 0x02, ebx
    81 000001FF FF6683C410          <1>
    82                              <1> 
    83                              <1>     ; 青B
    84 00000204 6A00E8A9FEFFFF6683- <1>     cdecl vga_set_read_plane, 0x00      ; 青プレーン
    84 0000020D C404                <1>
    85 0000020F 6A01E8BBFEFFFF6683- <1>     cdecl vga_set_write_plane, 0x01     ; 青プレーン
    85 00000218 C404                <1>
    86 0000021A 536A015756E8CAFEFF- <1>     cdecl vram_font_copy, esi, edi, 0x01, ebx
    86 00000223 FF6683C410          <1>
    87                              <1> 
    88 00000228 5F                  <1>     pop edi
    89 00000229 5E                  <1>     pop esi
    90 0000022A 5B                  <1>     pop ebx
    91                              <1> 
    92 0000022B 89EC                <1>     mov esp, ebp
    93 0000022D 5D                  <1>     pop ebp
    94                              <1> 
    95 0000022E C3                  <1>     ret
    39                                  %include "../modules/protect/draw_font.s"
    40                              <1> draw_font:  ; void draw_font(col, row);
    41                              <1> ; col 列
    42                              <1> ; row 行
    43 0000022F 55                  <1>     push ebp
    44 00000230 89E5                <1>     mov ebp, esp
    45                              <1> 
    46 00000232 50                  <1>     push eax
    47 00000233 53                  <1>     push ebx
    48 00000234 51                  <1>     push ecx
    49 00000235 57                  <1>     push edi
    50 00000236 56                  <1>     push esi
    51                              <1> 
    52                              <1> 
    53 00000237 8B7508              <1>     mov esi, [ebp + 8]  ; x
    54 0000023A 8B7D0C              <1>     mov edi, [ebp +12]  ; y
    55                              <1> 
    56 0000023D B900000000          <1>     mov ecx, 0
    57                              <1> .10L:
    58 00000242 81F900010000        <1>     cmp ecx, 256
    59 00000248 731F                <1>     jae .10E
    60                              <1> 
    61 0000024A 89C8                <1>     mov eax, ecx
    62 0000024C 83E00F              <1>     and eax, 0x0F   ; eax = 繰り返し回数の下位4ビット
    63 0000024F 01F0                <1>     add eax, esi    ; eax += x
    64                              <1> 
    65 00000251 89CB                <1>     mov ebx, ecx
    66 00000253 C1EB04              <1>     shr ebx, 4      ; eax = 繰り返し回数/16
    67 00000256 01FB                <1>     add ebx, edi    ; ebx += y
    68                              <1> 
    69 00000258 516A075350E80FFFFF- <1>     cdecl draw_char, eax, ebx, 0x07, ecx
    69 00000261 FF6683C410          <1>
    70                              <1> 
    71 00000266 41                  <1>     inc ecx
    72 00000267 EBD9                <1>     jmp .10L
    73                              <1> .10E:
    74                              <1> 
    75 00000269 5E                  <1>     pop esi
    76 0000026A 5F                  <1>     pop edi
    77 0000026B 59                  <1>     pop ecx
    78 0000026C 5B                  <1>     pop ebx
    79 0000026D 58                  <1>     pop eax
    80                              <1> 
    81 0000026E 89EC                <1>     mov esp, ebp
    82 00000270 5D                  <1>     pop ebp
    83                              <1> 
    84 00000271 C3                  <1>     ret
    40                                  %include "../modules/protect/draw_str.s"
    41                              <1> draw_str:   ;void draw_str(col, row, color, p);
    42                              <1> ; col: 列
    43                              <1> ; row: 行
    44                              <1> ; color: 描画色
    45                              <1> ; p: 文字列のアドレス
    46 00000272 55                  <1>     push ebp
    47 00000273 89E5                <1>     mov ebp, esp
    48                              <1> 
    49 00000275 50                  <1>     push eax
    50 00000276 53                  <1>     push ebx
    51 00000277 51                  <1>     push ecx
    52 00000278 52                  <1>     push edx
    53 00000279 56                  <1>     push esi
    54                              <1> 
    55                              <1> 
    56 0000027A 8B4D08              <1>     mov ecx, [ebp + 8]  ; col
    57 0000027D 8B550C              <1>     mov edx, [ebp +12]  ; row
    58 00000280 0FB75D10            <1>     movzx ebx, word [ebp + 16] ; color
    59 00000284 8B7514              <1>     mov esi, [ebp +20]  ; p
    60                              <1> 
    61 00000287 FC                  <1>     cld
    62                              <1> .10L:
    63 00000288 AC                  <1>     lodsb
    64 00000289 3C00                <1>     cmp al, 0
    65 0000028B 7425                <1>     je .10E
    66                              <1> 
    67 0000028D 50535251E8DBFEFFFF- <1>     cdecl draw_char, ecx, edx, ebx, eax
    67 00000296 6683C410            <1>
    68                              <1> 
    69 0000029A 41                  <1>     inc ecx
    70 0000029B 83F950              <1>     cmp ecx, 80
    71 0000029E 7C10                <1>     jl .12E         ; 横はみ出してなければgoto .12E
    72 000002A0 B900000000          <1>     mov ecx, 0      ; はみ出してれば次の行へ
    73 000002A5 42                  <1>     inc edx
    74 000002A6 83FA1E              <1>     cmp edx, 30
    75 000002A9 7C05                <1>     jl .12E         ; 縦はみ出してなければgoto .12E
    76 000002AB BA00000000          <1>     mov edx, 0      ; はみ出してれば左上に戻る
    77                              <1> .12E:
    78 000002B0 EBD6                <1>     jmp .10L
    79                              <1> .10E:
    80                              <1> 
    81 000002B2 5E                  <1>     pop esi
    82 000002B3 5A                  <1>     pop edx
    83 000002B4 59                  <1>     pop ecx
    84 000002B5 5B                  <1>     pop ebx
    85 000002B6 58                  <1>     pop eax
    86                              <1> 
    87 000002B7 89EC                <1>     mov esp, ebp
    88 000002B9 5D                  <1>     pop ebp
    89                              <1> 
    90 000002BA C3                  <1>     ret
    41                                  %include "../modules/protect/draw_color_bar.s"
    42                              <1> draw_color_bar:     ; void draw_color_bar(col, row);
    43                              <1> ; col: 列
    44                              <1> ; row: 行
    45 000002BB 55                  <1>     push ebp
    46 000002BC 89E5                <1>     mov ebp, esp
    47                              <1> 
    48 000002BE 50                  <1>     push eax
    49 000002BF 53                  <1>     push ebx
    50 000002C0 51                  <1>     push ecx
    51 000002C1 52                  <1>     push edx
    52 000002C2 56                  <1>     push esi
    53 000002C3 57                  <1>     push edi
    54                              <1> 
    55                              <1> 
    56 000002C4 8B7508              <1>     mov esi, [ebp + 8]      ; x
    57 000002C7 8B7D0C              <1>     mov edi, [ebp +12]      ; y
    58                              <1> 
    59                              <1>     ; カラーバーを表示
    60 000002CA B900000000          <1>     mov ecx, 0
    61                              <1> .10L:
    62 000002CF 83F910              <1>     cmp ecx, 16
    63 000002D2 732E                <1>     jae .10E
    64                              <1> 
    65                              <1>     ; 一回で8文字
    66 000002D4 89C8                <1>     mov eax, ecx
    67 000002D6 83E001              <1>     and eax, 0x01
    68 000002D9 C1E003              <1>     shl eax, 3
    69 000002DC 01F0                <1>     add eax, esi    ; col
    70                              <1> 
    71                              <1>     ; 2回に1回改行
    72 000002DE 89CB                <1>     mov ebx, ecx
    73 000002E0 D1EB                <1>     shr ebx, 1
    74 000002E2 01FB                <1>     add ebx, edi    ; row
    75                              <1> 
    76                              <1>     ; 背景色を2色見たら下位次の行
    77 000002E4 89CA                <1>     mov edx, ecx
    78 000002E6 D1E2                <1>     shl edx, 1
    79 000002E8 8B92[15030000]      <1>     mov edx, [.t0 + edx]    ; color
    80                              <1> 
    81 000002EE 68[0C030000]525350- <1>     cdecl draw_str, eax, ebx, edx, .s0
    81 000002F6 E877FFFFFF6683C410  <1>
    82                              <1> 
    83 000002FF 41                  <1>     inc ecx
    84 00000300 EBCD                <1>     jmp .10L
    85                              <1> .10E:
    86                              <1> 
    87 00000302 5F                  <1>     pop edi
    88 00000303 5E                  <1>     pop esi
    89 00000304 5A                  <1>     pop edx
    90 00000305 59                  <1>     pop ecx
    91 00000306 5B                  <1>     pop ebx
    92 00000307 58                  <1>     pop eax
    93                              <1> 
    94 00000308 89EC                <1>     mov esp, ebp
    95 0000030A 5D                  <1>     pop ebp
    96                              <1> 
    97 0000030B C3                  <1>     ret
    98                              <1> 
    99                              <1> 
   100 0000030C 202020202020202000  <1> .s0: db '        ', 0
   101                              <1> 
   102                              <1> .t0:
   103 00000315 00000008            <1>     dw 0x0000, 0x0800
   104 00000319 00010009            <1>     dw 0x0100, 0x0900
   105 0000031D 0002000A            <1>     dw 0x0200, 0x0A00
   106 00000321 0003000B            <1>     dw 0x0300, 0x0B00
   107 00000325 0004000C            <1>     dw 0x0400, 0x0C00
   108 00000329 0005000D            <1>     dw 0x0500, 0x0D00
   109 0000032D 0006000E            <1>     dw 0x0600, 0x0E00
   110 00000331 0007000F            <1>     dw 0x0700, 0x0F00
    42                                  %include "../modules/protect/draw_pixel.s"
    43                              <1> draw_pixel:     ; void draw_pixel(x, y, color);
    44                              <1> ; x: X座標
    45                              <1> ; y: Y座標
    46                              <1> ; color: 描画色
    47 00000335 55                  <1>     push ebp
    48 00000336 89E5                <1>     mov ebp, esp
    49                              <1> 
    50 00000338 50                  <1>     push eax
    51 00000339 53                  <1>     push ebx
    52 0000033A 51                  <1>     push ecx
    53 0000033B 57                  <1>     push edi
    54                              <1> 
    55                              <1> 
    56                              <1> 
    57                              <1>     ; y座標*80->y*(640/8)
    58 0000033C 8B7D0C              <1>     mov edi, [ebp +12]
    59 0000033F C1E704              <1>     shl edi, 4
    60 00000342 8DBCBF00000A00      <1>     lea edi, [edi * 4 + edi + 0x0A_0000]
    61                              <1> 
    62                              <1>     ; x座標/8  8pixel単位の位置
    63 00000349 8B5D08              <1>     mov ebx, [ebp + 8]
    64 0000034C 89D9                <1>     mov ecx, ebx
    65 0000034E C1EB03              <1>     shr ebx, 3
    66 00000351 01DF                <1>     add edi, ebx
    67                              <1> 
    68                              <1>     ; x座標を8で割った余りからビット位置を計算
    69                              <1>     ; 8pixel中の位置
    70                              <1>     ; 0=0b1000_0000, 1=0b0100_0000, ... , 7=0b0000_0001
    71 00000353 83E107              <1>     and ecx, 0x07   ; 下位3ビットは8で割ったときの余り
    72 00000356 BB80000000          <1>     mov ebx, 0x80
    73 0000035B D3EB                <1>     shr ebx, cl
    74                              <1> 
    75 0000035D 8B4D10              <1>     mov ecx, [ebp +16]
    76                              <1> 
    77                              <1>     ; プレーンごとに出力
    78 00000360 6A03E84DFDFFFF6683- <1>     cdecl vga_set_read_plane, 0x03              ; 輝度（I）プレーンを選択
    78 00000369 C404                <1>
    79 0000036B 6A08E85FFDFFFF6683- <1>     cdecl vga_set_write_plane, 0x08             ; 輝度（I）プレーンを選択
    79 00000374 C404                <1>
    80 00000376 516A085753E8C1FDFF- <1>     cdecl vram_bit_copy, ebx, edi, 0x08, ecx 
    80 0000037F FF6683C410          <1>
    81                              <1> 
    82 00000384 6A02E829FDFFFF6683- <1>     cdecl vga_set_read_plane, 0x02              ; Rプレーンを選択
    82 0000038D C404                <1>
    83 0000038F 6A04E83BFDFFFF6683- <1>     cdecl vga_set_write_plane, 0x04             ; Rプレーンを選択
    83 00000398 C404                <1>
    84 0000039A 516A045753E89DFDFF- <1>     cdecl vram_bit_copy, ebx, edi, 0x04, ecx 
    84 000003A3 FF6683C410          <1>
    85                              <1> 
    86 000003A8 6A01E805FDFFFF6683- <1>     cdecl vga_set_read_plane, 0x01              ; Gプレーンを選択
    86 000003B1 C404                <1>
    87 000003B3 6A02E817FDFFFF6683- <1>     cdecl vga_set_write_plane, 0x02             ; Gプレーンを選択
    87 000003BC C404                <1>
    88 000003BE 516A025753E879FDFF- <1>     cdecl vram_bit_copy, ebx, edi, 0x02, ecx 
    88 000003C7 FF6683C410          <1>
    89                              <1> 
    90 000003CC 6A00E8E1FCFFFF6683- <1>     cdecl vga_set_read_plane, 0x00              ; Bプレーンを選択
    90 000003D5 C404                <1>
    91 000003D7 6A01E8F3FCFFFF6683- <1>     cdecl vga_set_write_plane, 0x01             ; Bプレーンを選択
    91 000003E0 C404                <1>
    92 000003E2 516A015753E855FDFF- <1>     cdecl vram_bit_copy, ebx, edi, 0x01, ecx 
    92 000003EB FF6683C410          <1>
    93                              <1> 
    94 000003F0 5F                  <1>     pop edi
    95 000003F1 59                  <1>     pop ecx
    96 000003F2 5B                  <1>     pop ebx
    97 000003F3 58                  <1>     pop eax
    98                              <1> 
    99 000003F4 89EC                <1>     mov esp, ebp
   100 000003F6 5D                  <1>     pop ebp
   101                              <1> 
   102 000003F7 C3                  <1>     ret
    43                                  %include "../modules/protect/draw_line.s"
    44                              <1> draw_line:  ; void draw_line(X0, Y0, X1, Y1, color);
    45                              <1> ; X0 始点のＸ座標
    46                              <1> ; Y0 始点のＹ座標
    47                              <1> ; X1 終点のX座標
    48                              <1> ; Y1 終点のY座標
    49                              <1> ; color 描画色
    50 000003F8 55                  <1>     push ebp        ; EBP+ 4| EIP(戻り番地)
    51 000003F9 89E5                <1>     mov ebp, esp    ; EBP+ 0| EBP(元の値)
    52                              <1>                     ; ----------------
    53 000003FB 6A00                <1>     push dword 0    ;    - 4| sum   = 0
    54 000003FD 6A00                <1>     push dword 0    ;    - 8| x0    = 0
    55 000003FF 6A00                <1>     push dword 0    ;    -12| dx    = 0
    56 00000401 6A00                <1>     push dword 0    ;    -16| inc_x = 0
    57 00000403 6A00                <1>     push dword 0    ;    -20| y0    = 0
    58 00000405 6A00                <1>     push dword 0    ;    -24| dy    = 0
    59 00000407 6A00                <1>     push dword 0    ;    -28| inc_y = 0
    60                              <1> 
    61 00000409 50                  <1>     push eax        ;    -32| eax
    62 0000040A 53                  <1>     push ebx        ;    -36| ebx
    63 0000040B 51                  <1>     push ecx        ;    -40| ecx
    64 0000040C 52                  <1>     push edx        ;    -44| edx
    65 0000040D 56                  <1>     push esi        ;    -48| esi
    66 0000040E 57                  <1>     push edi        ;    -52| edi
    67                              <1>     ; espはebp-52?
    68                              <1> 
    69                              <1>     ; x0とx1の距離を計算
    70 0000040F 8B4508              <1>     mov eax, [ebp + 8]
    71 00000412 8B5D10              <1>     mov ebx, [ebp +16]
    72 00000415 29C3                <1>     sub ebx, eax
    73 00000417 7D09                <1>     jge .10F
    74                              <1> 
    75 00000419 F7DB                <1>     neg ebx
    76 0000041B BEFFFFFFFF          <1>     mov esi, -1
    77 00000420 EB05                <1>     jmp .10E
    78                              <1> .10F:
    79 00000422 BE01000000          <1>     mov esi, 1
    80                              <1> .10E:
    81                              <1>     
    82                              <1>     ; y0とy1の距離を計算
    83 00000427 8B4D0C              <1>     mov ecx, [ebp +12]
    84 0000042A 8B5514              <1>     mov edx, [ebp +20]
    85 0000042D 29CA                <1>     sub edx, ecx
    86 0000042F 7D09                <1>     jge .20F
    87                              <1> 
    88 00000431 F7DA                <1>     neg edx
    89 00000433 BFFFFFFFFF          <1>     mov edi, -1
    90 00000438 EB05                <1>     jmp .20E
    91                              <1> .20F:
    92 0000043A BF01000000          <1>     mov edi, 1
    93                              <1> .20E:
    94                              <1>     
    95                              <1>     ; x軸
    96 0000043F 8945F8              <1>     mov [ebp - 8], eax  ; 開始座標
    97 00000442 895DF4              <1>     mov [ebp -12], ebx  ; 描画幅
    98 00000445 8975F0              <1>     mov [ebp -16], esi  ; 増分(基準軸:1 or -1)
    99                              <1> 
   100                              <1>     ; y軸
   101 00000448 894DEC              <1>     mov [ebp -20], ecx  ; 開始座標
   102 0000044B 8955E8              <1>     mov [ebp -24], edx  ; 描画幅
   103 0000044E 897DE4              <1>     mov [ebp -28], edi  ; 増分(基準軸:1 or -1)
   104                              <1> 
   105                              <1> 
   106                              <1>     ; 基準軸を決める
   107 00000451 39D3                <1>     cmp ebx, edx
   108 00000453 7F08                <1>     jg .22F
   109                              <1>     
   110 00000455 8D75EC              <1>     lea esi, [ebp -20]  ; Yが基準軸
   111 00000458 8D7DF8              <1>     lea edi, [ebp - 8]
   112                              <1> 
   113 0000045B EB06                <1>     jmp .22E
   114                              <1> .22F:
   115                              <1>     
   116 0000045D 8D75F8              <1>     lea esi, [ebp - 8]  ; Xが基準軸
   117 00000460 8D7DEC              <1>     lea edi, [ebp -20]
   118                              <1> .22E:
   119                              <1> 
   120                              <1> ; 基準軸 esi
   121                              <1> ; 相対軸 edi
   122                              <1> 
   123                              <1>     ; 繰り返し回数（基準軸のドット数）
   124 00000463 8B4EFC              <1>     mov ecx, [esi - 4]
   125 00000466 83F900              <1>     cmp ecx, 0
   126 00000469 7505                <1>     jnz .30E
   127 0000046B B901000000          <1>     mov ecx, 1          ; if(基準軸の描画幅 == 0) 基準軸の描画幅 = 1
   128                              <1> .30E:
   129                              <1> 
   130                              <1>     ; 線を描画
   131                              <1> .50L:
   132                              <1> 
   133 00000470 FF7518FF75ECFF75F8- <1>     cdecl draw_pixel, dword [ebp - 8],                       dword [ebp -20],                       dword [ebp +24]
   133 00000479 E8B7FEFFFF6683C40C  <1>
   136                              <1> 
   137                              <1>     ; 座標更新
   138                              <1> 
   139                              <1>     ; 基準軸の更新
   140 00000482 8B46F8              <1>     mov eax, [esi - 8]
   141 00000485 0106                <1>     add [esi - 0], eax  ; 基準軸開始座標 += 基準軸増分(1 or -1)
   142                              <1> 
   143                              <1>     ; 相対軸の更新
   144 00000487 8B45FC              <1>     mov eax, [ebp - 4]  ; 相対軸の今まで描画したピクセル数
   145 0000048A 0347FC              <1>     add eax, [edi - 4]  ;           += 増分
   146                              <1> 
   147 0000048D 8B5EFC              <1>     mov ebx, [esi - 4]  ; 基準軸の描画幅
   148                              <1> 
   149 00000490 39D8                <1>     cmp eax, ebx        ; if(積算 < 基準軸の描画幅) goto .52E
   150 00000492 7C07                <1>     jl .52E
   151 00000494 29D8                <1>     sub eax, ebx        ; 積算 -= 描画幅
   152                              <1> 
   153 00000496 8B5FF8              <1>     mov ebx, [edi - 8]
   154 00000499 011F                <1>     add [edi - 0], ebx  ; 相対軸の座標 += 相対軸増分
   155                              <1> .52E:
   156                              <1>     
   157 0000049B 8945FC              <1>     mov [ebp - 4], eax  ; 積算値を更新
   158                              <1> 
   159 0000049E E2D0                <1>     loop .50L
   160                              <1> .50E:
   161                              <1> 
   162                              <1> 
   163 000004A0 5F                  <1>     pop edi
   164 000004A1 5E                  <1>     pop esi
   165 000004A2 5A                  <1>     pop edx
   166 000004A3 59                  <1>     pop ecx
   167 000004A4 5B                  <1>     pop ebx
   168 000004A5 58                  <1>     pop eax
   169                              <1>     ; espはebp-28?
   170                              <1> 
   171                              <1>     ; ↓これいらないの？
   172                              <1>     ; pop (tmp_reg)
   173                              <1>     ; pop (tmp_reg)
   174                              <1>     ; pop (tmp_reg)
   175                              <1>     ; pop (tmp_reg)
   176                              <1>     ; pop (tmp_reg)
   177                              <1>     ; pop (tmp_reg)
   178                              <1>     ; pop (tmp_reg)
   179                              <1>     ; もしくはsub esp, 56とか？
   180                              <1> 
   181                              <1>     ; espはebp?
   182 000004A6 89EC                <1>     mov esp, ebp
   183 000004A8 5D                  <1>     pop ebp
   184                              <1> 
   185 000004A9 C3                  <1>     ret
    44                                  %include "../modules/protect/draw_rect.s"
    45                              <1> draw_rect:  ; void draw_rect(x0, y0, x1, y1, color);
    46 000004AA 55                  <1>     push ebp
    47 000004AB 89E5                <1>     mov ebp, esp
    48                              <1>     
    49 000004AD 50                  <1>     push eax
    50 000004AE 53                  <1>     push ebx
    51 000004AF 51                  <1>     push ecx
    52 000004B0 52                  <1>     push edx
    53 000004B1 56                  <1>     push esi
    54                              <1> 
    55 000004B2 8B4508              <1>     mov eax, [ebp + 8]  ; x0
    56 000004B5 8B5D0C              <1>     mov ebx, [ebp +12]  ; y0
    57 000004B8 8B4D10              <1>     mov ecx, [ebp +16]  ; x1
    58 000004BB 8B5514              <1>     mov edx, [ebp +20]  ; y1
    59 000004BE 8B7518              <1>     mov esi, [ebp +24]  ; color
    60                              <1> 
    61                              <1>     ; 左上(x0, y0) 右下(x1, y1)にする
    62 000004C1 39C8                <1>     cmp eax, ecx
    63 000004C3 7C01                <1>     jl .10E
    64 000004C5 91                  <1>     xchg eax, ecx
    65                              <1> .10E:
    66 000004C6 39D3                <1>     cmp ebx, edx
    67 000004C8 7C02                <1>     jl .20E
    68 000004CA 87DA                <1>     xchg ebx, edx
    69                              <1> .20E:
    70                              <1> 
    71                              <1>     ; 矩形を描画
    72 000004CC 5653515350E822FFFF- <1>     cdecl draw_line, eax, ebx, ecx, ebx, esi    ; 上線
    72 000004D5 FF6683C414          <1>
    73 000004DA 5652505350E814FFFF- <1>     cdecl draw_line, eax, ebx, eax, edx, esi    ; 左線
    73 000004E3 FF6683C414          <1>
    74                              <1> 
    75 000004E8 4A                  <1>     dec edx
    76 000004E9 5652515250E805FFFF- <1>     cdecl draw_line, eax, edx, ecx, edx, esi    ; 下線（1ドット上）
    76 000004F2 FF6683C414          <1>
    77 000004F7 42                  <1>     inc edx
    78                              <1> 
    79 000004F8 49                  <1>     dec ecx
    80 000004F9 5652515351E8F5FEFF- <1>     cdecl draw_line, ecx, ebx, ecx, edx, esi    ; 右線（1ドット左）
    80 00000502 FF6683C414          <1>
    81                              <1> 
    82 00000507 5E                  <1>     pop esi
    83 00000508 5A                  <1>     pop edx
    84 00000509 59                  <1>     pop ecx
    85 0000050A 5B                  <1>     pop ebx
    86 0000050B 58                  <1>     pop eax
    87                              <1>     
    88 0000050C 89EC                <1>     mov esp, ebp
    89 0000050E 5D                  <1>     pop ebp
    90                              <1> 
    91 0000050F C3                  <1>     ret
    45                                  
    46                                  ;パディング
    47 00000510 00<rep 1AF0h>               times KERNEL_SIZE - ($ - $$) db 0
    48                                  
