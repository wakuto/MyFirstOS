     1                                  %include "../include/define.s"
     2                              <1>     SECT_SIZE equ (512)                     ; セクタサイズ
     3                              <1> 
     4                              <1>     BOOT_SIZE equ (1024 * 8)                ; ブートコードサイズ
     5                              <1>     KERNEL_SIZE equ (1024 * 8)              ; カーネルサイズ
     6                              <1> 
     7                              <1>     KERNEL_LOAD equ 0x0010_1000             ; カーネルのロード位置
     8                              <1> 
     9                              <1>     E820_RECORD_SIZE equ 20
    10                              <1> 
    11                              <1>     BOOT_LOAD equ 0x7C00                    ; ブートプログラムのロード位置
    12                              <1>     BOOT_END equ (BOOT_LOAD + BOOT_SIZE)    ; ブートコードの終了位置
    13                              <1> 
    14                              <1>     BOOT_SECT equ (BOOT_SIZE / SECT_SIZE)   ; ブートコードのセクタ数
    15                              <1>     KERNEL_SECT equ (KERNEL_SIZE / SECT_SIZE)   ; カーネルのセクタ数
     2                                  %include "../include/macro.s"
     3                              <1> ; C言語と同等の関数呼び出し
     4                              <1> %macro cdecl 1-*.nolist ; 可変引数, リスト出力の抑止
     5                              <1> 
     6                              <1>     %rep %0 - 1         ; 引数の数-1回
     7                              <1>         push %{-1:-1}   ; 一番最後の引数
     8                              <1>         %rotate -1      ; 一番最後の引数を先頭に移動
     9                              <1>     %endrep
    10                              <1>     %rotate -1      ; 回転をもとに戻す
    11                              <1> 
    12                              <1>     call %1         ; 第１引数を呼び出し
    13                              <1> 
    14                              <1>     %if 1 < %0
    15                              <1>         add sp, (__BITS__ >> 3) * (%0 - 1)  ; cpuのbyte数(bit数/8) * 引数の数-1
    16                              <1>     %endif
    17                              <1> %endmacro
    18                              <1> 
    19                              <1> struc drive
    20 00000000 ????                <1>     .no resw 1      ; ドライブ番号
    21 00000002 ????                <1>     .cyln resw 1    ; シリンダ
    22 00000004 ????                <1>     .head resw 1    ; ヘッド
    23 00000006 ????                <1>     .sect resw 1    ; セクタ
    24                              <1> endstruc
     3                                  
     4                                      ORG KERNEL_LOAD
     5                                  
     6                                  [BITS 32]   ; 32bitコードを生成
     7                                  
     8                                  ; エントリポイント
     9                                  kernel:
    10                                      ; フォントアドレスを取得
    11 00000000 BE007E0000                  mov esi, BOOT_LOAD + SECT_SIZE  ; 0x7C00 + 512  フォントアドレス
    12 00000005 0FB706                      movzx eax, word [esi + 0]       ; FONT.seg  セグメント
    13 00000008 0FB75E02                    movzx ebx, word [esi + 2]       ; FONT.off  オフセット
    14 0000000C C1E004                      shl eax, 4
    15 0000000F 01D8                        add eax, ebx
    16 00000011 A3[B4010000]                mov [FONT_ADR], eax
    17                                  
    18 00000016 6A0D6A3FE814030000-         cdecl draw_font, 63, 13         ; フォント一覧表示
    18 0000001F 6683C408           
    19 00000023 6A046A3FE893030000-         cdecl draw_color_bar, 63, 4     ; カラーバーを表示
    19 0000002C 6683C408           
    20 00000030 68[A3010000]680F01-         cdecl draw_str, 25, 14, 0x010F, .s0 ; 文字の表示
    20 00000038 00006A0E6A19E83303-
    20 00000041 00006683C410       
    21                                  
    22                                      ; 線を描画
    23 00000047 6A0F6A006A006A646A-         cdecl draw_line, 100, 100,   0,   0, 0x0F
    23 00000050 64E8A60400006683C4-
    23 00000059 14                 
    24 0000005A 6A0F6A0068C8000000-         cdecl draw_line, 100, 100, 200,   0, 0x0F
    24 00000063 6A646A64E890040000-
    24 0000006C 6683C414           
    25 00000070 6A0F68C800000068C8-         cdecl draw_line, 100, 100, 200, 200, 0x0F
    25 00000079 0000006A646A64E877-
    25 00000082 0400006683C414     
    26 00000089 6A0F68C80000006A00-         cdecl draw_line, 100, 100,   0, 200, 0x0F
    26 00000092 6A646A64E861040000-
    26 0000009B 6683C414           
    27                                  
    28 0000009F 6A026A006A326A646A-         cdecl draw_line, 100, 100,  50,   0, 0x02
    28 000000A8 64E84E0400006683C4-
    28 000000B1 14                 
    29 000000B2 6A036A006896000000-         cdecl draw_line, 100, 100, 150,   0, 0x03
    29 000000BB 6A646A64E838040000-
    29 000000C4 6683C414           
    30 000000C8 6A0468C80000006896-         cdecl draw_line, 100, 100, 150, 200, 0x04
    30 000000D1 0000006A646A64E81F-
    30 000000DA 0400006683C414     
    31 000000E1 6A0568C80000006A32-         cdecl draw_line, 100, 100,  50, 200, 0x05
    31 000000EA 6A646A64E809040000-
    31 000000F3 6683C414           
    32                                  
    33 000000F7 6A026A326A006A646A-         cdecl draw_line, 100, 100,   0,  50, 0x02
    33 00000100 64E8F60300006683C4-
    33 00000109 14                 
    34 0000010A 6A036A3268C8000000-         cdecl draw_line, 100, 100, 200,  50, 0x03
    34 00000113 6A646A64E8E0030000-
    34 0000011C 6683C414           
    35 00000120 6A04689600000068C8-         cdecl draw_line, 100, 100, 200, 150, 0x04
    35 00000129 0000006A646A64E8C7-
    35 00000132 0300006683C414     
    36 00000139 6A0568960000006A00-         cdecl draw_line, 100, 100,   0, 150, 0x05
    36 00000142 6A646A64E8B1030000-
    36 0000014B 6683C414           
    37                                  
    38 0000014F 6A0F6A006A646A646A-         cdecl draw_line, 100, 100, 100,   0, 0x0F
    38 00000158 64E89E0300006683C4-
    38 00000161 14                 
    39 00000162 6A0F6A6468C8000000-         cdecl draw_line, 100, 100, 200, 100, 0x0F
    39 0000016B 6A646A64E888030000-
    39 00000174 6683C414           
    40 00000178 6A0F68C80000006A64-         cdecl draw_line, 100, 100, 100, 200, 0x0F
    40 00000181 6A646A64E872030000-
    40 0000018A 6683C414           
    41 0000018E 6A0F6A646A006A646A-         cdecl draw_line, 100, 100,   0, 100, 0x0F
    41 00000197 64E85F0300006683C4-
    41 000001A0 14                 
    42                                  
    43                                      ; 処理の終了
    44 000001A1 EBFE                        jmp $
    45                                  
    46 000001A3 2048656C6C6F2C206B-     .s0 db " Hello, kernel! ", 0
    46 000001AC 65726E656C212000   
    47                                  
    48                                  ALIGN 4, db 0
    49 000001B4 00000000                FONT_ADR: dd 0
    50                                  
    51                                  ; モジュール
    52                                  %include "../modules/protect/vga.s"
    53                              <1> vga_set_read_plane:     ; void vga_set_read_plane(plane);
    54                              <1> ; plane: 読み込みプレーン
    55 000001B8 55                  <1>     push ebp
    56 000001B9 89E5                <1>     mov ebp, esp
    57                              <1> 
    58 000001BB 6650                <1>     push ax
    59 000001BD 6652                <1>     push dx
    60                              <1> 
    61                              <1> 
    62                              <1>     ; 読み込みプレーンの選択
    63 000001BF 8A6508              <1>     mov ah, [ebp + 8]   ; 3=輝度, 2～0=RGB
    64 000001C2 80E403              <1>     and ah, 0x03        ; 余計なビットをマスク
    65 000001C5 B004                <1>     mov al, 0x04        ; 読み込みマップ選択レジスタ
    66 000001C7 66BACE03            <1>     mov dx, 0x03CE      ; グラフィックス制御ポート
    67 000001CB 66EF                <1>     out dx, ax
    68                              <1> 
    69 000001CD 665A                <1>     pop dx
    70 000001CF 6658                <1>     pop ax
    71                              <1> 
    72 000001D1 89EC                <1>     mov esp, ebp
    73 000001D3 5D                  <1>     pop ebp
    74                              <1> 
    75 000001D4 C3                  <1>     ret
    76                              <1> 
    77                              <1> vga_set_write_plane:    ; void vga_set_write_plane(plane);
    78                              <1> ; plane 書き込みプレーン
    79 000001D5 55                  <1>     push ebp
    80 000001D6 89E5                <1>     mov ebp, esp
    81                              <1> 
    82 000001D8 6650                <1>     push ax
    83 000001DA 6652                <1>     push dx
    84                              <1> 
    85                              <1> 
    86                              <1>     ; 書き込みプレーンの選択
    87 000001DC 8A6508              <1>     mov ah, [ebp + 8]   ; ah = 書き込みプレーン
    88 000001DF 80E40F              <1>     and ah, 0x0F        ; 余計なビットをマスク
    89 000001E2 B002                <1>     mov al, 0x02        ; マップマスクレジスタ（書き込みプレーンを指定）
    90 000001E4 66BAC403            <1>     mov dx, 0x03C4      ; シーケンサ制御ポート
    91 000001E8 66EF                <1>     out dx, ax
    92                              <1> 
    93                              <1> 
    94 000001EA 665A                <1>     pop dx
    95 000001EC 6658                <1>     pop ax
    96                              <1> 
    97 000001EE 89EC                <1>     mov esp, ebp
    98 000001F0 5D                  <1>     pop ebp
    99                              <1> 
   100 000001F1 C3                  <1>     ret
   101                              <1> 
   102                              <1> vram_font_copy:         ; void vram_font_copy(font, vram, plane, color);
   103                              <1> ; font FONTアドレス
   104                              <1> ; vram VRAMアドレス
   105                              <1> ; plane 出力プレーン（1つのプレーンのみをビットで指定）
   106                              <1> ; color 描画色 背景色(----IRGB):前景色(---TIRGB) T=透過, I=輝度
   107 000001F2 55                  <1>     push ebp
   108 000001F3 89E5                <1>     mov ebp, esp
   109                              <1>     
   110 000001F5 50                  <1>     push eax
   111 000001F6 53                  <1>     push ebx
   112 000001F7 51                  <1>     push ecx
   113 000001F8 52                  <1>     push edx
   114 000001F9 57                  <1>     push edi
   115 000001FA 56                  <1>     push esi
   116                              <1> 
   117 000001FB 8B7508              <1>     mov esi, [ebp + 8]          ; font
   118 000001FE 8B7D0C              <1>     mov edi, [ebp + 12]         ; vram
   119 00000201 0FB64510            <1>     movzx eax, byte [ebp + 16]  ; plane
   120 00000205 0FB75D14            <1>     movzx ebx, word [ebp + 20]  ; color
   121                              <1>     ; bh = 背景色 bl = 前景色
   122                              <1> 
   123 00000209 84C7                <1>     test bh, al     ; zf = (背景色 & プレーン）
   124 0000020B 0F94C6              <1>     setz dh         ; dh = zf
   125 0000020E FECE                <1>     dec dh          ; 背景色が含まれる：dh = 0xFF, 含まれない：dh = 0x00
   126                              <1> 
   127 00000210 84C3                <1>     test bl, al     ; zf = （前景色 & プレーン）
   128 00000212 0F94C2              <1>     setz dl         ; dl = zf
   129 00000215 FECA                <1>     dec dl          ; 前景色が含まれる：dl = 0xFF, 含まれない：dl = 0x00
   130                              <1> 
   131                              <1>     ; 16ドットフォントのコピー
   132 00000217 FC                  <1>     cld             ; アドレス加算モード
   133                              <1> 
   134 00000218 B910000000          <1>     mov ecx, 16
   135                              <1> .10L:
   136                              <1>     ; フォントマスクの作成
   137 0000021D AC                  <1>     lodsb           ; al = *(esi++) // フォントデータ1ビット分
   138 0000021E 88C4                <1>     mov ah, al      ; ah ~= al      // !フォントデータ
   139 00000220 F6D4                <1>     not ah
   140                              <1> 
   141                              <1>     ; 前景色
   142 00000222 20D0                <1>     and al, dl      ; al = プレーン&前景色ありorなし
   143                              <1> 
   144                              <1>     ; 背景色
   145 00000224 F7C310000000        <1>     test ebx, 0x0010    ; if(透過on) zf = 0; else zf = 1;
   146 0000022A 7404                <1>     jz .11F
   147                              <1>     ; 透過on
   148 0000022C 2227                <1>     and ah, [edi]       ; 現在のデータでフォントデータをマスク
   149 0000022E EB02                <1>     jmp .11E
   150                              <1> .11F:                   ; 透過off
   151 00000230 20F4                <1>     and ah, dh          ; if(背景色なし) ah = 0;
   152                              <1> .11E:
   153                              <1>     
   154                              <1>     ; 前景色と背景色を合成
   155 00000232 08E0                <1>     or al, ah           ; al = 背景 | 前景
   156                              <1> 
   157                              <1>     ; 新しい値を出力
   158 00000234 8807                <1>     mov [edi], al
   159                              <1> 
   160 00000236 83C750              <1>     add edi, 80      ; 1行すすめる
   161 00000239 E2E2                <1>     loop .10L
   162                              <1> .10E:
   163                              <1> 
   164 0000023B 5E                  <1>     pop esi
   165 0000023C 5F                  <1>     pop edi
   166 0000023D 5A                  <1>     pop edx
   167 0000023E 59                  <1>     pop ecx
   168 0000023F 5B                  <1>     pop ebx
   169 00000240 58                  <1>     pop eax
   170                              <1> 
   171 00000241 89EC                <1>     mov esp, ebp
   172 00000243 5D                  <1>     pop ebp
   173                              <1> 
   174 00000244 C3                  <1>     ret
   175                              <1> 
   176                              <1> vram_bit_copy:         ; void vram_bit_copy(bit, vram, plane, color);
   177                              <1> ; bitデータ
   178                              <1> ; vram VRAMアドレス
   179                              <1> ; plane 出力プレーン（1つのプレーンのみをビットで指定）
   180                              <1> ; color 描画色 前景色(--------_----IRGB) I=輝度
   181 00000245 55                  <1>     push ebp
   182 00000246 89E5                <1>     mov ebp, esp
   183                              <1>     
   184 00000248 50                  <1>     push eax
   185 00000249 53                  <1>     push ebx
   186 0000024A 52                  <1>     push edx
   187 0000024B 57                  <1>     push edi
   188                              <1> 
   189 0000024C 8B7D0C              <1>     mov edi, [ebp + 12]         ; vram
   190 0000024F 0FB64510            <1>     movzx eax, byte [ebp + 16]  ; plane
   191 00000253 0FB75D14            <1>     movzx ebx, word [ebp + 20]  ; color
   192                              <1>     ; bl = 前景色
   193                              <1> 
   194                              <1>     ; 常に透過モード
   195 00000257 84C3                <1>     test bl, al     ; zf = （前景色 & プレーン）
   196 00000259 0F94C3              <1>     setz bl         ; dl = zf
   197 0000025C FECB                <1>     dec bl          ; 前景色が含まれる：dl = 0xFF, 含まれない：dl = 0x00
   198                              <1> 
   199                              <1>     ; マスク
   200 0000025E 8A4508              <1>     mov al, [ebp + 8]   ; bit
   201 00000261 88C4                <1>     mov ah, al      ; ah ~= al
   202 00000263 F6D4                <1>     not ah
   203                              <1> 
   204 00000265 2227                <1>     and ah, [edi]       ; !出力ビットパターン & 現在値 出力ビットだけ0 背景
   205 00000267 20D8                <1>     and al, bl          ;  出力ビットパターン & 表示色 前景
   206 00000269 08E0                <1>     or al, ah           ; 背景と前景を合成
   207 0000026B 8807                <1>     mov [edi], al       ; プレーンに書き込み
   208                              <1>     
   209                              <1> 
   210 0000026D 5F                  <1>     pop edi
   211 0000026E 5A                  <1>     pop edx
   212 0000026F 5B                  <1>     pop ebx
   213 00000270 58                  <1>     pop eax
   214                              <1> 
   215 00000271 89EC                <1>     mov esp, ebp
   216 00000273 5D                  <1>     pop ebp
   217                              <1> 
   218 00000274 C3                  <1>     ret
    53                                  %include "../modules/protect/draw_char.s"
    54                              <1> draw_char:      ; void draw_char(col, row, color, ch);
    55                              <1> ; col 列（0～79）
    56                              <1> ; row 行（0～29）
    57                              <1> ; color 描画色 背景色(----IRGB):前景色(---TIRGB) T=透過, I=輝度
    58                              <1> ; ch 文字
    59                              <1> 
    60 00000275 55                  <1>     push ebp
    61 00000276 89E5                <1>     mov ebp, esp
    62                              <1> 
    63 00000278 53                  <1>     push ebx
    64 00000279 56                  <1>     push esi
    65 0000027A 57                  <1>     push edi
    66                              <1> 
    67                              <1>     ; コピー元フォントアドレスを設定
    68 0000027B 0FB67514            <1>     movzx esi, byte [ebp +20]  ; esi = ch
    69 0000027F C1E604              <1>     shl esi, 4                  ; ch * 16   1文字16バイト
    70 00000282 0335[B4010000]      <1>     add esi, [FONT_ADR]         ; ESI = フォントアドレス
    71                              <1> 
    72                              <1>     ; コピー先アドレスを取得
    73                              <1>     ; adr = 0xA0000 + (640 / 8 * 16) * y + x
    74                              <1>     ;               16行(1文字の高さ）  *  縦位置 + 横位置
    75 00000288 8B7D0C              <1>     mov edi, [ebp +12]                  ; Y
    76 0000028B C1E708              <1>     shl edi, 8
    77 0000028E 8DBCBF00000A00      <1>     lea edi, [edi * 4 + edi + 0xA0000]  ; Y * 16行
    78 00000295 037D08              <1>     add edi, [ebp + 8]                  ; edi += X
    79                              <1> 
    80                              <1>     ; 1文字分のフォントを出力
    81 00000298 0FB75D10            <1>     movzx ebx, word [ebp +16]           ; 表示色
    82                              <1> 
    83                              <1>     ; 輝度I
    84 0000029C 6A03E815FFFFFF6683- <1>     cdecl vga_set_read_plane, 0x03      ; 輝度プレーン
    84 000002A5 C404                <1>
    85 000002A7 6A08E827FFFFFF6683- <1>     cdecl vga_set_write_plane, 0x08     ; 輝度プレーン
    85 000002B0 C404                <1>
    86 000002B2 536A085756E836FFFF- <1>     cdecl vram_font_copy, esi, edi, 0x08, ebx
    86 000002BB FF6683C410          <1>
    87                              <1> 
    88                              <1>     ; 赤R
    89 000002C0 6A02E8F1FEFFFF6683- <1>     cdecl vga_set_read_plane, 0x02      ; 赤プレーン
    89 000002C9 C404                <1>
    90 000002CB 6A04E803FFFFFF6683- <1>     cdecl vga_set_write_plane, 0x04     ; 赤輝度プレーン
    90 000002D4 C404                <1>
    91 000002D6 536A045756E812FFFF- <1>     cdecl vram_font_copy, esi, edi, 0x04, ebx
    91 000002DF FF6683C410          <1>
    92                              <1> 
    93                              <1>     ; 緑G
    94 000002E4 6A01E8CDFEFFFF6683- <1>     cdecl vga_set_read_plane, 0x01      ; 緑プレーン
    94 000002ED C404                <1>
    95 000002EF 6A02E8DFFEFFFF6683- <1>     cdecl vga_set_write_plane, 0x02     ; 緑プレーン
    95 000002F8 C404                <1>
    96 000002FA 536A025756E8EEFEFF- <1>     cdecl vram_font_copy, esi, edi, 0x02, ebx
    96 00000303 FF6683C410          <1>
    97                              <1> 
    98                              <1>     ; 青B
    99 00000308 6A00E8A9FEFFFF6683- <1>     cdecl vga_set_read_plane, 0x00      ; 青プレーン
    99 00000311 C404                <1>
   100 00000313 6A01E8BBFEFFFF6683- <1>     cdecl vga_set_write_plane, 0x01     ; 青プレーン
   100 0000031C C404                <1>
   101 0000031E 536A015756E8CAFEFF- <1>     cdecl vram_font_copy, esi, edi, 0x01, ebx
   101 00000327 FF6683C410          <1>
   102                              <1> 
   103 0000032C 5F                  <1>     pop edi
   104 0000032D 5E                  <1>     pop esi
   105 0000032E 5B                  <1>     pop ebx
   106                              <1> 
   107 0000032F 89EC                <1>     mov esp, ebp
   108 00000331 5D                  <1>     pop ebp
   109                              <1> 
   110 00000332 C3                  <1>     ret
    54                                  %include "../modules/protect/draw_font.s"
    55                              <1> draw_font:  ; void draw_font(col, row);
    56                              <1> ; col 列
    57                              <1> ; row 行
    58 00000333 55                  <1>     push ebp
    59 00000334 89E5                <1>     mov ebp, esp
    60                              <1> 
    61 00000336 50                  <1>     push eax
    62 00000337 53                  <1>     push ebx
    63 00000338 51                  <1>     push ecx
    64 00000339 57                  <1>     push edi
    65 0000033A 56                  <1>     push esi
    66                              <1> 
    67                              <1> 
    68 0000033B 8B7508              <1>     mov esi, [ebp + 8]  ; x
    69 0000033E 8B7D0C              <1>     mov edi, [ebp +12]  ; y
    70                              <1> 
    71 00000341 B900000000          <1>     mov ecx, 0
    72                              <1> .10L:
    73 00000346 81F900010000        <1>     cmp ecx, 256
    74 0000034C 731F                <1>     jae .10E
    75                              <1> 
    76 0000034E 89C8                <1>     mov eax, ecx
    77 00000350 83E00F              <1>     and eax, 0x0F   ; eax = 繰り返し回数の下位4ビット
    78 00000353 01F0                <1>     add eax, esi    ; eax += x
    79                              <1> 
    80 00000355 89CB                <1>     mov ebx, ecx
    81 00000357 C1EB04              <1>     shr ebx, 4      ; eax = 繰り返し回数/16
    82 0000035A 01FB                <1>     add ebx, edi    ; ebx += y
    83                              <1> 
    84 0000035C 516A075350E80FFFFF- <1>     cdecl draw_char, eax, ebx, 0x07, ecx
    84 00000365 FF6683C410          <1>
    85                              <1> 
    86 0000036A 41                  <1>     inc ecx
    87 0000036B EBD9                <1>     jmp .10L
    88                              <1> .10E:
    89                              <1> 
    90 0000036D 5E                  <1>     pop esi
    91 0000036E 5F                  <1>     pop edi
    92 0000036F 59                  <1>     pop ecx
    93 00000370 5B                  <1>     pop ebx
    94 00000371 58                  <1>     pop eax
    95                              <1> 
    96 00000372 89EC                <1>     mov esp, ebp
    97 00000374 5D                  <1>     pop ebp
    98                              <1> 
    99 00000375 C3                  <1>     ret
    55                                  %include "../modules/protect/draw_str.s"
    56                              <1> draw_str:   ;void draw_str(col, row, color, p);
    57                              <1> ; col: 列
    58                              <1> ; row: 行
    59                              <1> ; color: 描画色
    60                              <1> ; p: 文字列のアドレス
    61 00000376 55                  <1>     push ebp
    62 00000377 89E5                <1>     mov ebp, esp
    63                              <1> 
    64 00000379 50                  <1>     push eax
    65 0000037A 53                  <1>     push ebx
    66 0000037B 51                  <1>     push ecx
    67 0000037C 52                  <1>     push edx
    68 0000037D 56                  <1>     push esi
    69                              <1> 
    70                              <1> 
    71 0000037E 8B4D08              <1>     mov ecx, [ebp + 8]  ; col
    72 00000381 8B550C              <1>     mov edx, [ebp +12]  ; row
    73 00000384 0FB75D10            <1>     movzx ebx, word [ebp + 16] ; color
    74 00000388 8B7514              <1>     mov esi, [ebp +20]  ; p
    75                              <1> 
    76 0000038B FC                  <1>     cld
    77                              <1> .10L:
    78 0000038C AC                  <1>     lodsb
    79 0000038D 3C00                <1>     cmp al, 0
    80 0000038F 7425                <1>     je .10E
    81                              <1> 
    82 00000391 50535251E8DBFEFFFF- <1>     cdecl draw_char, ecx, edx, ebx, eax
    82 0000039A 6683C410            <1>
    83                              <1> 
    84 0000039E 41                  <1>     inc ecx
    85 0000039F 83F950              <1>     cmp ecx, 80
    86 000003A2 7C10                <1>     jl .12E         ; 横はみ出してなければgoto .12E
    87 000003A4 B900000000          <1>     mov ecx, 0      ; はみ出してれば次の行へ
    88 000003A9 42                  <1>     inc edx
    89 000003AA 83FA1E              <1>     cmp edx, 30
    90 000003AD 7C05                <1>     jl .12E         ; 縦はみ出してなければgoto .12E
    91 000003AF BA00000000          <1>     mov edx, 0      ; はみ出してれば左上に戻る
    92                              <1> .12E:
    93 000003B4 EBD6                <1>     jmp .10L
    94                              <1> .10E:
    95                              <1> 
    96 000003B6 5E                  <1>     pop esi
    97 000003B7 5A                  <1>     pop edx
    98 000003B8 59                  <1>     pop ecx
    99 000003B9 5B                  <1>     pop ebx
   100 000003BA 58                  <1>     pop eax
   101                              <1> 
   102 000003BB 89EC                <1>     mov esp, ebp
   103 000003BD 5D                  <1>     pop ebp
   104                              <1> 
   105 000003BE C3                  <1>     ret
    56                                  %include "../modules/protect/draw_color_bar.s"
    57                              <1> draw_color_bar:     ; void draw_color_bar(col, row);
    58                              <1> ; col: 列
    59                              <1> ; row: 行
    60 000003BF 55                  <1>     push ebp
    61 000003C0 89E5                <1>     mov ebp, esp
    62                              <1> 
    63 000003C2 50                  <1>     push eax
    64 000003C3 53                  <1>     push ebx
    65 000003C4 51                  <1>     push ecx
    66 000003C5 52                  <1>     push edx
    67 000003C6 56                  <1>     push esi
    68 000003C7 57                  <1>     push edi
    69                              <1> 
    70                              <1> 
    71 000003C8 8B7508              <1>     mov esi, [ebp + 8]      ; x
    72 000003CB 8B7D0C              <1>     mov edi, [ebp +12]      ; y
    73                              <1> 
    74                              <1>     ; カラーバーを表示
    75 000003CE B900000000          <1>     mov ecx, 0
    76                              <1> .10L:
    77 000003D3 83F910              <1>     cmp ecx, 16
    78 000003D6 732E                <1>     jae .10E
    79                              <1> 
    80                              <1>     ; 一回で8文字
    81 000003D8 89C8                <1>     mov eax, ecx
    82 000003DA 83E001              <1>     and eax, 0x01
    83 000003DD C1E003              <1>     shl eax, 3
    84 000003E0 01F0                <1>     add eax, esi    ; col
    85                              <1> 
    86                              <1>     ; 2回に1回改行
    87 000003E2 89CB                <1>     mov ebx, ecx
    88 000003E4 D1EB                <1>     shr ebx, 1
    89 000003E6 01FB                <1>     add ebx, edi    ; row
    90                              <1> 
    91                              <1>     ; 背景色を2色見たら下位次の行
    92 000003E8 89CA                <1>     mov edx, ecx
    93 000003EA D1E2                <1>     shl edx, 1
    94 000003EC 8B92[19040000]      <1>     mov edx, [.t0 + edx]    ; color
    95                              <1> 
    96 000003F2 68[10040000]525350- <1>     cdecl draw_str, eax, ebx, edx, .s0
    96 000003FA E877FFFFFF6683C410  <1>
    97                              <1> 
    98 00000403 41                  <1>     inc ecx
    99 00000404 EBCD                <1>     jmp .10L
   100                              <1> .10E:
   101                              <1> 
   102 00000406 5F                  <1>     pop edi
   103 00000407 5E                  <1>     pop esi
   104 00000408 5A                  <1>     pop edx
   105 00000409 59                  <1>     pop ecx
   106 0000040A 5B                  <1>     pop ebx
   107 0000040B 58                  <1>     pop eax
   108                              <1> 
   109 0000040C 89EC                <1>     mov esp, ebp
   110 0000040E 5D                  <1>     pop ebp
   111                              <1> 
   112 0000040F C3                  <1>     ret
   113                              <1> 
   114                              <1> 
   115 00000410 202020202020202000  <1> .s0: db '        ', 0
   116                              <1> 
   117                              <1> .t0:
   118 00000419 00000008            <1>     dw 0x0000, 0x0800
   119 0000041D 00010009            <1>     dw 0x0100, 0x0900
   120 00000421 0002000A            <1>     dw 0x0200, 0x0A00
   121 00000425 0003000B            <1>     dw 0x0300, 0x0B00
   122 00000429 0004000C            <1>     dw 0x0400, 0x0C00
   123 0000042D 0005000D            <1>     dw 0x0500, 0x0D00
   124 00000431 0006000E            <1>     dw 0x0600, 0x0E00
   125 00000435 0007000F            <1>     dw 0x0700, 0x0F00
    57                                  %include "../modules/protect/draw_pixel.s"
    58                              <1> draw_pixel:     ; void draw_pixel(x, y, color);
    59                              <1> ; x: X座標
    60                              <1> ; y: Y座標
    61                              <1> ; color: 描画色
    62 00000439 55                  <1>     push ebp
    63 0000043A 89E5                <1>     mov ebp, esp
    64                              <1> 
    65 0000043C 50                  <1>     push eax
    66 0000043D 53                  <1>     push ebx
    67 0000043E 51                  <1>     push ecx
    68 0000043F 57                  <1>     push edi
    69                              <1> 
    70                              <1> 
    71                              <1> 
    72                              <1>     ; y座標*80->y*(640/8)
    73 00000440 8B7D0C              <1>     mov edi, [ebp +12]
    74 00000443 C1E704              <1>     shl edi, 4
    75 00000446 8DBCBF00000A00      <1>     lea edi, [edi * 4 + edi + 0x0A_0000]
    76                              <1> 
    77                              <1>     ; x座標/8  8pixel単位の位置
    78 0000044D 8B5D08              <1>     mov ebx, [ebp + 8]
    79 00000450 89D9                <1>     mov ecx, ebx
    80 00000452 C1EB03              <1>     shr ebx, 3
    81 00000455 01DF                <1>     add edi, ebx
    82                              <1> 
    83                              <1>     ; x座標を8で割った余りからビット位置を計算
    84                              <1>     ; 8pixel中の位置
    85                              <1>     ; 0=0b1000_0000, 1=0b0100_0000, ... , 7=0b0000_0001
    86 00000457 83E107              <1>     and ecx, 0x07   ; 下位3ビットは8で割ったときの余り
    87 0000045A BB80000000          <1>     mov ebx, 0x80
    88 0000045F D3EB                <1>     shr ebx, cl
    89                              <1> 
    90 00000461 8B4D10              <1>     mov ecx, [ebp +16]
    91                              <1> 
    92                              <1>     ; プレーンごとに出力
    93 00000464 6A03E84DFDFFFF6683- <1>     cdecl vga_set_read_plane, 0x03              ; 輝度（I）プレーンを選択
    93 0000046D C404                <1>
    94 0000046F 6A08E85FFDFFFF6683- <1>     cdecl vga_set_write_plane, 0x08             ; 輝度（I）プレーンを選択
    94 00000478 C404                <1>
    95 0000047A 516A085753E8C1FDFF- <1>     cdecl vram_bit_copy, ebx, edi, 0x08, ecx 
    95 00000483 FF6683C410          <1>
    96                              <1> 
    97 00000488 6A02E829FDFFFF6683- <1>     cdecl vga_set_read_plane, 0x02              ; Rプレーンを選択
    97 00000491 C404                <1>
    98 00000493 6A04E83BFDFFFF6683- <1>     cdecl vga_set_write_plane, 0x04             ; Rプレーンを選択
    98 0000049C C404                <1>
    99 0000049E 516A045753E89DFDFF- <1>     cdecl vram_bit_copy, ebx, edi, 0x04, ecx 
    99 000004A7 FF6683C410          <1>
   100                              <1> 
   101 000004AC 6A01E805FDFFFF6683- <1>     cdecl vga_set_read_plane, 0x01              ; Gプレーンを選択
   101 000004B5 C404                <1>
   102 000004B7 6A02E817FDFFFF6683- <1>     cdecl vga_set_write_plane, 0x02             ; Gプレーンを選択
   102 000004C0 C404                <1>
   103 000004C2 516A025753E879FDFF- <1>     cdecl vram_bit_copy, ebx, edi, 0x02, ecx 
   103 000004CB FF6683C410          <1>
   104                              <1> 
   105 000004D0 6A00E8E1FCFFFF6683- <1>     cdecl vga_set_read_plane, 0x00              ; Bプレーンを選択
   105 000004D9 C404                <1>
   106 000004DB 6A01E8F3FCFFFF6683- <1>     cdecl vga_set_write_plane, 0x01             ; Bプレーンを選択
   106 000004E4 C404                <1>
   107 000004E6 516A015753E855FDFF- <1>     cdecl vram_bit_copy, ebx, edi, 0x01, ecx 
   107 000004EF FF6683C410          <1>
   108                              <1> 
   109 000004F4 5F                  <1>     pop edi
   110 000004F5 59                  <1>     pop ecx
   111 000004F6 5B                  <1>     pop ebx
   112 000004F7 58                  <1>     pop eax
   113                              <1> 
   114 000004F8 89EC                <1>     mov esp, ebp
   115 000004FA 5D                  <1>     pop ebp
   116                              <1> 
   117 000004FB C3                  <1>     ret
    58                                  %include "../modules/protect/draw_line.s"
    59                              <1> draw_line:  ; void draw_line(X0, Y0, X1, Y1, color);
    60                              <1> ; X0 始点のＸ座標
    61                              <1> ; Y0 始点のＹ座標
    62                              <1> ; X1 終点のX座標
    63                              <1> ; Y1 終点のY座標
    64                              <1> ; color 描画色
    65 000004FC 55                  <1>     push ebp        ; EBP+ 4| EIP(戻り番地)
    66 000004FD 89E5                <1>     mov ebp, esp    ; EBP+ 0| EBP(元の値)
    67                              <1>                     ; ----------------
    68 000004FF 6A00                <1>     push dword 0    ;    - 4| sum   = 0
    69 00000501 6A00                <1>     push dword 0    ;    - 8| x0    = 0
    70 00000503 6A00                <1>     push dword 0    ;    -12| dx    = 0
    71 00000505 6A00                <1>     push dword 0    ;    -16| inc_x = 0
    72 00000507 6A00                <1>     push dword 0    ;    -20| y0    = 0
    73 00000509 6A00                <1>     push dword 0    ;    -24| dy    = 0
    74 0000050B 6A00                <1>     push dword 0    ;    -28| inc_y = 0
    75                              <1> 
    76 0000050D 50                  <1>     push eax        ;    -32| eax
    77 0000050E 53                  <1>     push ebx        ;    -36| ebx
    78 0000050F 51                  <1>     push ecx        ;    -40| ecx
    79 00000510 52                  <1>     push edx        ;    -44| edx
    80 00000511 56                  <1>     push esi        ;    -48| esi
    81 00000512 57                  <1>     push edi        ;    -52| edi
    82                              <1>     ; espはebp-52?
    83                              <1> 
    84                              <1>     ; x0とx1の距離を計算
    85 00000513 8B4508              <1>     mov eax, [ebp + 8]
    86 00000516 8B5D10              <1>     mov ebx, [ebp +16]
    87 00000519 29C3                <1>     sub ebx, eax
    88 0000051B 7D09                <1>     jge .10F
    89                              <1> 
    90 0000051D F7DB                <1>     neg ebx
    91 0000051F BEFFFFFFFF          <1>     mov esi, -1
    92 00000524 EB05                <1>     jmp .10E
    93                              <1> .10F:
    94 00000526 BE01000000          <1>     mov esi, 1
    95                              <1> .10E:
    96                              <1>     
    97                              <1>     ; y0とy1の距離を計算
    98 0000052B 8B4D0C              <1>     mov ecx, [ebp +12]
    99 0000052E 8B5514              <1>     mov edx, [ebp +20]
   100 00000531 29CA                <1>     sub edx, ecx
   101 00000533 7D09                <1>     jge .20F
   102                              <1> 
   103 00000535 F7DA                <1>     neg edx
   104 00000537 BFFFFFFFFF          <1>     mov edi, -1
   105 0000053C EB05                <1>     jmp .20E
   106                              <1> .20F:
   107 0000053E BF01000000          <1>     mov edi, 1
   108                              <1> .20E:
   109                              <1>     
   110                              <1>     ; x軸
   111 00000543 8945F8              <1>     mov [ebp - 8], eax  ; 開始座標
   112 00000546 895DF4              <1>     mov [ebp -12], ebx  ; 描画幅
   113 00000549 8975F0              <1>     mov [ebp -16], esi  ; 増分(基準軸:1 or -1)
   114                              <1> 
   115                              <1>     ; y軸
   116 0000054C 894DEC              <1>     mov [ebp -20], ecx  ; 開始座標
   117 0000054F 8955E8              <1>     mov [ebp -24], edx  ; 描画幅
   118 00000552 897DE4              <1>     mov [ebp -28], edi  ; 増分(基準軸:1 or -1)
   119                              <1> 
   120                              <1> 
   121                              <1>     ; 基準軸を決める
   122 00000555 39D3                <1>     cmp ebx, edx
   123 00000557 7F08                <1>     jg .22F
   124                              <1>     
   125 00000559 8D75EC              <1>     lea esi, [ebp -20]  ; Yが基準軸
   126 0000055C 8D7DF8              <1>     lea edi, [ebp - 8]
   127                              <1> 
   128 0000055F EB06                <1>     jmp .22E
   129                              <1> .22F:
   130                              <1>     
   131 00000561 8D75F8              <1>     lea esi, [ebp - 8]  ; Xが基準軸
   132 00000564 8D7DEC              <1>     lea edi, [ebp -20]
   133                              <1> .22E:
   134                              <1> 
   135                              <1> ; 基準軸 esi
   136                              <1> ; 相対軸 edi
   137                              <1> 
   138                              <1>     ; 繰り返し回数（基準軸のドット数）
   139 00000567 8B4EFC              <1>     mov ecx, [esi - 4]
   140 0000056A 83F900              <1>     cmp ecx, 0
   141 0000056D 7505                <1>     jnz .30E
   142 0000056F B901000000          <1>     mov ecx, 1          ; if(基準軸の描画幅 == 0) 基準軸の描画幅 = 1
   143                              <1> .30E:
   144                              <1> 
   145                              <1>     ; 線を描画
   146                              <1> .50L:
   147                              <1> 
   148 00000574 FF7518FF75ECFF75F8- <1>     cdecl draw_pixel, dword [ebp - 8],                       dword [ebp -20],                       dword [ebp +24]
   148 0000057D E8B7FEFFFF6683C40C  <1>
   151                              <1> 
   152                              <1>     ; 座標更新
   153                              <1> 
   154                              <1>     ; 基準軸の更新
   155 00000586 8B46F8              <1>     mov eax, [esi - 8]
   156 00000589 0106                <1>     add [esi - 0], eax  ; 基準軸開始座標 += 基準軸増分(1 or -1)
   157                              <1> 
   158                              <1>     ; 相対軸の更新
   159 0000058B 8B45FC              <1>     mov eax, [ebp - 4]  ; 相対軸の今まで描画したピクセル数
   160 0000058E 0347FC              <1>     add eax, [edi - 4]  ;           += 増分
   161                              <1> 
   162 00000591 8B5EFC              <1>     mov ebx, [esi - 4]  ; 基準軸の描画幅
   163                              <1> 
   164 00000594 39D8                <1>     cmp eax, ebx        ; if(積算 < 基準軸の描画幅) goto .52E
   165 00000596 7C07                <1>     jl .52E
   166 00000598 29D8                <1>     sub eax, ebx        ; 積算 -= 描画幅
   167                              <1> 
   168 0000059A 8B5FF8              <1>     mov ebx, [edi - 8]
   169 0000059D 011F                <1>     add [edi - 0], ebx  ; 相対軸の座標 += 相対軸増分
   170                              <1> .52E:
   171                              <1>     
   172 0000059F 8945FC              <1>     mov [ebp - 4], eax  ; 積算値を更新
   173                              <1> 
   174 000005A2 E2D0                <1>     loop .50L
   175                              <1> .50E:
   176                              <1> 
   177                              <1> 
   178 000005A4 5F                  <1>     pop edi
   179 000005A5 5E                  <1>     pop esi
   180 000005A6 5A                  <1>     pop edx
   181 000005A7 59                  <1>     pop ecx
   182 000005A8 5B                  <1>     pop ebx
   183 000005A9 58                  <1>     pop eax
   184                              <1>     ; espはebp-28?
   185                              <1> 
   186                              <1>     ; ↓これいらないの？
   187                              <1>     ; pop (tmp_reg)
   188                              <1>     ; pop (tmp_reg)
   189                              <1>     ; pop (tmp_reg)
   190                              <1>     ; pop (tmp_reg)
   191                              <1>     ; pop (tmp_reg)
   192                              <1>     ; pop (tmp_reg)
   193                              <1>     ; pop (tmp_reg)
   194                              <1>     ; もしくはsub esp, 56とか？
   195                              <1> 
   196                              <1>     ; espはebp?
   197 000005AA 89EC                <1>     mov esp, ebp
   198 000005AC 5D                  <1>     pop ebp
   199                              <1> 
   200 000005AD C3                  <1>     ret
    59                                  
    60                                  ;パディング
    61 000005AE 00<rep 1A52h>               times KERNEL_SIZE - ($ - $$) db 0
    62                                  
