     1                                      BOOT_LOAD   equ 0x7c00  ; ブートプログラムのロード位置
     2                                      ORG BOOT_LOAD           ; ロードアドレスをアセンブラに指示
     3                                  
     4                                  ; マクロ
     5                                  %include "../include/macro.s"   ; C言語と同等の関数呼び出し
     6                              <1> ; C言語と同等の関数呼び出し
     7                              <1> %macro cdecl 1-*.nolist ; 可変引数, リスト出力の抑止
     8                              <1> 
     9                              <1>     %rep %0 - 1         ; 引数の数-1回
    10                              <1>         push %{-1:-1}   ; 一番最後の引数
    11                              <1>         %rotate -1      ; 一番最後の引数を先頭に移動
    12                              <1>     %endrep
    13                              <1>     %rotate -1      ; 回転をもとに戻す
    14                              <1> 
    15                              <1>     call %1         ; 第１引数を呼び出し
    16                              <1> 
    17                              <1>     %if 1 < %0
    18                              <1>         add sp, (__BITS__ >> 3) * (%0 - 1)  ; cpuのbyte数(bit数/8) * 引数の数-1
    19                              <1>     %endif
    20                              <1> %endmacro
     6                                  
     7                                  entry:
     8 00000000 EB58                        jmp ipl      ; jump to ipl
     9                                  
    10                                      ; BPB(BIOS Parameter Block
    11 00000002 90<rep 58h>                 times 90 - ($ - $$) db 0x90
    12                                  
    13                                  
    14                                      ; IPL(Initial Program Loader)
    15                                  ipl:
    16 0000005A FA                          cli         ; clear interrupu flag 割込み禁止
    17                                  
    18 0000005B B80000                      mov ax, 0x0000
    19 0000005E 89C2                        mov dx, ax
    20 00000060 8EC0                        mov es, ax
    21 00000062 8ED0                        mov ss, ax
    22 00000064 BC007C                      mov sp, BOOT_LOAD
    23                                      
    24 00000067 FB                          sti         ; set interrupt flag 割り込み許可
    25                                  
    26 00000068 8816[4801]                  mov [BOOT.DRIVE], dl    ; ブートドライブの番号(DL)を保存
    27                                  
    28 0000006C 68[3001]E8D80083C4-         cdecl puts, .s0
    28 00000074 02                 
    29 00000075 6A016A0A6A0868-             cdecl itoa, 8086, .s1, 8, 10, 0b0001    ; "    8086"
    29 0000007C [3D01]68961FE8E500-
    29 00000084 83C40A             
    30 00000087 68[3D01]E8BD0083C4-         cdecl puts, .s1
    30 0000008F 02                 
    31 00000090 6A036A0A6A0868-             cdecl itoa, 8086, .s1, 8, 10, 0b0011    ; "+   8086"
    31 00000097 [3D01]68961FE8CA00-
    31 0000009F 83C40A             
    32 000000A2 68[3D01]E8A20083C4-         cdecl puts, .s1
    32 000000AA 02                 
    33 000000AB 6A016A0A6A0868-             cdecl itoa, -8086, .s1, 8, 10, 0b0001   ; "-   8086"
    33 000000B2 [3D01]686AE0E8AF00-
    33 000000BA 83C40A             
    34 000000BD 68[3D01]E8870083C4-         cdecl puts, .s1
    34 000000C5 02                 
    35 000000C6 6A016A0A6A0868-             cdecl itoa, -1, .s1, 8, 10, 0b0001      ; "-      1"
    35 000000CD [3D01]6AFFE8950083-
    35 000000D5 C40A               
    36 000000D7 68[3D01]E86D0083C4-         cdecl puts, .s1
    36 000000DF 02                 
    37 000000E0 6A006A0A6A0868-             cdecl itoa, -1, .s1, 8, 10, 0b0000      ; "   65535"
    37 000000E7 [3D01]6AFFE87B0083-
    37 000000EF C40A               
    38 000000F1 68[3D01]E8530083C4-         cdecl puts, .s1
    38 000000F9 02                 
    39 000000FA 6A006A106A0868-             cdecl itoa, -1, .s1, 8, 16, 0b0000      ; "    FFFF"
    39 00000101 [3D01]6AFFE8610083-
    39 00000109 C40A               
    40 0000010B 68[3D01]E8390083C4-         cdecl puts, .s1
    40 00000113 02                 
    41 00000114 6A046A026A0868-             cdecl itoa, 12, .s1, 8, 2, 0b0100       ; "00001100"
    41 0000011B [3D01]6A0CE8470083-
    41 00000123 C40A               
    42 00000125 68[3D01]E81F0083C4-         cdecl puts, .s1
    42 0000012D 02                 
    43                                  
    44 0000012E EBFE                        jmp $       ; while(1)
    45                                  
    46 00000130 426F6F74696E672E2E-     .s0 db "Booting...", 0x0A, 0x0D, 0x00
    46 00000139 2E0A0D00           
    47 0000013D 2D2D2D2D2D2D2D2D0A-     .s1 db "--------", 0x0A, 0x0D, 0x00
    47 00000146 0D00               
    48                                  
    49                                  ALIGN 2, db 0
    50                                  BOOT:           ; ブートドライブ関係の情報
    51 00000148 0000                    .DRIVE: dw 0    ; ドライブ番号
    52                                  
    53                                  ; モジュール
    54                                  %include "../modules/real/puts.s"
    55                              <1> puts:       ; void puts(str);
    56 0000014A 55                  <1>     push bp
    57 0000014B 89E5                <1>     mov bp, sp
    58                              <1> 
    59 0000014D 50                  <1>     push ax
    60 0000014E 53                  <1>     push bx
    61 0000014F 56                  <1>     push si
    62                              <1> 
    63 00000150 8B7604              <1>     mov si, [bp + 4]    ; si=文字列のアドレス
    64                              <1> 
    65 00000153 B40E                <1>     mov ah, 0x0E
    66 00000155 BB0000              <1>     mov bx, 0x0000
    67 00000158 FC                  <1>     cld
    68                              <1> 
    69                              <1> .10L:
    70 00000159 AC                  <1>     lodsb
    71                              <1> 
    72 0000015A 3C00                <1>     cmp al, 0x00
    73 0000015C 7404                <1>     je .10E
    74                              <1> 
    75 0000015E CD10                <1>     int 0x10
    76 00000160 EBF7                <1>     jmp .10L
    77                              <1> 
    78                              <1> .10E:
    79 00000162 5E                  <1>     pop si
    80 00000163 5B                  <1>     pop bx
    81 00000164 58                  <1>     pop ax
    82                              <1> 
    83 00000165 89EC                <1>     mov sp, bp
    84 00000167 5D                  <1>     pop bp
    85                              <1> 
    86 00000168 C3                  <1>     ret
    55                                  %include "../modules/real/itoa.s"
    56                              <1> itoa:       ; void itoa(num, buff, size, radix, flag);
    57                              <1> ; num   変換する値
    58                              <1> ; buff  保存先バッファアドレス
    59                              <1> ; size  保存先バッファサイズ
    60                              <1> ; radix 基数（2, 8, 10, 16)
    61                              <1> ; flags 
    62                              <1> ;   B2: 空白を'0'で埋める
    63                              <1> ;   B1: '+/-'記号を付加する
    64                              <1> ;   B0: 値を符号付き変数として扱う
    65                              <1> 
    66 00000169 55                  <1>     push bp
    67 0000016A 89E5                <1>     mov bp, sp
    68                              <1> 
    69 0000016C 50                  <1>     push ax
    70 0000016D 53                  <1>     push bx
    71 0000016E 51                  <1>     push cx
    72 0000016F 52                  <1>     push dx
    73 00000170 56                  <1>     push si
    74 00000171 57                  <1>     push di
    75                              <1> 
    76                              <1> 
    77 00000172 8B4604              <1>     mov ax, [bp + 4]    ; num
    78 00000175 8B4E08              <1>     mov cx, [bp + 8]    ; size
    79 00000178 8B7606              <1>     mov si, [bp + 6]    ; buff
    80                              <1> 
    81 0000017B 89F7                <1>     mov di, si
    82 0000017D 01CF                <1>     add di, cx
    83 0000017F 4F                  <1>     dec di              ; di = &si[cx-1]
    84                              <1> 
    85 00000180 8B5E0C              <1>     mov bx, word [bp + 12]   ; flags
    86                              <1> 
    87                              <1>     ; 符号付き判定
    88 00000183 F7C30100            <1>     test bx, 0b0001     ; 論理積を計算、0ならZFをセット
    89                              <1> .10Q:
    90 00000187 7408                <1>     je .10E         ; E=Exit
    91 00000189 83F800              <1>     cmp ax, 0
    92                              <1> .12Q:
    93 0000018C 7D03                <1>     jge .12E
    94 0000018E 83CB02              <1>     or bx, 0b0010
    95                              <1> .12E:
    96                              <1> .10E:
    97                              <1> 
    98                              <1>     ; 符号出力判定
    99 00000191 F7C30200            <1>     test bx, 0b0010
   100                              <1> .20Q:
   101 00000195 7410                <1>     je .20E
   102 00000197 83F800              <1>     cmp ax, 0
   103                              <1> .22Q:
   104 0000019A 7D07                <1>     jge .22F
   105 0000019C F7D8                <1>     neg ax
   106 0000019E C6042D              <1>     mov [si], byte '-'
   107 000001A1 EB03                <1>     jmp .22E
   108                              <1> .22F:
   109                              <1>     
   110 000001A3 C6042B              <1>     mov [si], byte '+'
   111                              <1> .22E:
   112 000001A6 49                  <1>     dec cx
   113                              <1> .20E:
   114                              <1> 
   115                              <1>     ; ASCII変換
   116 000001A7 8B5E0A              <1>     mov bx, [bp + 10]   ; radix(基数)
   117                              <1> .30L:
   118 000001AA BA0000              <1>     mov dx, 0
   119 000001AD F7F3                <1>     div bx      ; 商：ax, あまり: dx
   120                              <1> 
   121 000001AF 89D6                <1>     mov si, dx
   122 000001B1 8A94[D901]          <1>     mov dl, byte [.ascii + si]
   123                              <1> 
   124 000001B5 8815                <1>     mov [di], dl
   125 000001B7 4F                  <1>     dec di
   126                              <1> 
   127 000001B8 83F800              <1>     cmp ax, 0
   128 000001BB E0ED                <1>     loopnz .30L
   129                              <1> .30E:
   130                              <1> 
   131 000001BD 83F900              <1>     cmp cx, 0
   132                              <1> .40Q:
   133 000001C0 740D                <1>     je .40E
   134 000001C2 B020                <1>     mov al, ' '
   135 000001C4 837E0C04            <1>     cmp [bp + 12], word 0b0100
   136                              <1> .42Q:
   137 000001C8 7502                <1>     jne .42E
   138 000001CA B030                <1>     mov al, '0'
   139                              <1> .42E:
   140 000001CC FD                  <1>     std         ; dimention flag = 1(-方向)
   141 000001CD F3AA                <1>     rep stosb   ; while (--cx) *di-- = al;
   142                              <1> .40E:
   143                              <1> 
   144 000001CF 5F                  <1>     pop di
   145 000001D0 5E                  <1>     pop si
   146 000001D1 5A                  <1>     pop dx
   147 000001D2 59                  <1>     pop cx
   148 000001D3 5B                  <1>     pop bx
   149 000001D4 58                  <1>     pop ax
   150                              <1> 
   151 000001D5 89EC                <1>     mov sp, bp
   152 000001D7 5D                  <1>     pop bp
   153                              <1> 
   154 000001D8 C3                  <1>     ret
   155                              <1> 
   156 000001D9 303132333435363738- <1> .ascii db "0123456789ABCDEF"    ; 変換テーブル
   156 000001E2 39414243444546      <1>
    56                                  
    57 000001E9 00<rep 15h>                 times 510 - ($ - $$) db 0x00
    58 000001FE 55AA                        db 0x55, 0xAA
