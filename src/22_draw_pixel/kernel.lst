     1                                  %include "../include/define.s"
     2                              <1>     SECT_SIZE equ (512)                     ; セクタサイズ
     3                              <1> 
     4                              <1>     BOOT_SIZE equ (1024 * 8)                ; ブートコードサイズ
     5                              <1>     KERNEL_SIZE equ (1024 * 8)              ; カーネルサイズ
     6                              <1> 
     7                              <1>     KERNEL_LOAD equ 0x0010_1000             ; カーネルのロード位置
     8                              <1> 
     9                              <1>     E820_RECORD_SIZE equ 20
    10                              <1> 
    11                              <1>     BOOT_LOAD equ 0x7C00                    ; ブートプログラムのロード位置
    12                              <1>     BOOT_END equ (BOOT_LOAD + BOOT_SIZE)    ; ブートコードの終了位置
    13                              <1> 
    14                              <1>     BOOT_SECT equ (BOOT_SIZE / SECT_SIZE)   ; ブートコードのセクタ数
    15                              <1>     KERNEL_SECT equ (KERNEL_SIZE / SECT_SIZE)   ; カーネルのセクタ数
     2                                  %include "../include/macro.s"
     3                              <1> ; C言語と同等の関数呼び出し
     4                              <1> %macro cdecl 1-*.nolist ; 可変引数, リスト出力の抑止
     5                              <1> 
     6                              <1>     %rep %0 - 1         ; 引数の数-1回
     7                              <1>         push %{-1:-1}   ; 一番最後の引数
     8                              <1>         %rotate -1      ; 一番最後の引数を先頭に移動
     9                              <1>     %endrep
    10                              <1>     %rotate -1      ; 回転をもとに戻す
    11                              <1> 
    12                              <1>     call %1         ; 第１引数を呼び出し
    13                              <1> 
    14                              <1>     %if 1 < %0
    15                              <1>         add sp, (__BITS__ >> 3) * (%0 - 1)  ; cpuのbyte数(bit数/8) * 引数の数-1
    16                              <1>     %endif
    17                              <1> %endmacro
    18                              <1> 
    19                              <1> struc drive
    20 00000000 ????                <1>     .no resw 1      ; ドライブ番号
    21 00000002 ????                <1>     .cyln resw 1    ; シリンダ
    22 00000004 ????                <1>     .head resw 1    ; ヘッド
    23 00000006 ????                <1>     .sect resw 1    ; セクタ
    24                              <1> endstruc
     3                                  
     4                                      ORG KERNEL_LOAD
     5                                  
     6                                  [BITS 32]   ; 32bitコードを生成
     7                                  
     8                                  ; エントリポイント
     9                                  kernel:
    10                                      ; フォントアドレスを取得
    11 00000000 BE007E0000                  mov esi, BOOT_LOAD + SECT_SIZE  ; 0x7C00 + 512  フォントアドレス
    12 00000005 0FB706                      movzx eax, word [esi + 0]       ; FONT.seg  セグメント
    13 00000008 0FB75E02                    movzx ebx, word [esi + 2]       ; FONT.off  オフセット
    14 0000000C C1E004                      shl eax, 4
    15 0000000F 01D8                        add eax, ebx
    16 00000011 A3[4C010000]                mov [FONT_ADR], eax
    17                                  
    18 00000016 6A0D6A3FE8AC020000-         cdecl draw_font, 63, 13         ; フォント一覧表示
    18 0000001F 6683C408           
    19 00000023 6A046A3FE82B030000-         cdecl draw_color_bar, 63, 4     ; カラーバーを表示
    19 0000002C 6683C408           
    20 00000030 68[39010000]680F01-         cdecl draw_str, 25, 14, 0x010F, .s0 ; 文字の表示
    20 00000038 00006A0E6A19E8CB02-
    20 00000041 00006683C410       
    21                                  
    22 00000047 6A016A046A08E87F03-         cdecl draw_pixel,  8,  4, 0x01
    22 00000050 00006683C40C       
    23 00000056 6A016A056A09E87003-         cdecl draw_pixel,  9,  5, 0x01
    23 0000005F 00006683C40C       
    24 00000065 6A026A066A0AE86103-         cdecl draw_pixel, 10,  6, 0x02
    24 0000006E 00006683C40C       
    25 00000074 6A026A076A0BE85203-         cdecl draw_pixel, 11,  7, 0x02
    25 0000007D 00006683C40C       
    26 00000083 6A036A086A0CE84303-         cdecl draw_pixel, 12,  8, 0x03
    26 0000008C 00006683C40C       
    27 00000092 6A036A096A0DE83403-         cdecl draw_pixel, 13,  9, 0x03
    27 0000009B 00006683C40C       
    28 000000A1 6A046A0A6A0EE82503-         cdecl draw_pixel, 14, 10, 0x04
    28 000000AA 00006683C40C       
    29 000000B0 6A046A0B6A0FE81603-         cdecl draw_pixel, 15, 11, 0x04
    29 000000B9 00006683C40C       
    30                                  
    31 000000BF 6A036A046A0FE80703-         cdecl draw_pixel, 15,  4, 0x03
    31 000000C8 00006683C40C       
    32 000000CE 6A036A056A0EE8F802-         cdecl draw_pixel, 14,  5, 0x03
    32 000000D7 00006683C40C       
    33 000000DD 6A046A066A0DE8E902-         cdecl draw_pixel, 13,  6, 0x04
    33 000000E6 00006683C40C       
    34 000000EC 6A046A076A0CE8DA02-         cdecl draw_pixel, 12,  7, 0x04
    34 000000F5 00006683C40C       
    35 000000FB 6A016A086A0BE8CB02-         cdecl draw_pixel, 11,  8, 0x01
    35 00000104 00006683C40C       
    36 0000010A 6A016A096A0AE8BC02-         cdecl draw_pixel, 10,  9, 0x01
    36 00000113 00006683C40C       
    37 00000119 6A026A0A6A09E8AD02-         cdecl draw_pixel,  9, 10, 0x02
    37 00000122 00006683C40C       
    38 00000128 6A026A0B6A08E89E02-         cdecl draw_pixel,  8, 11, 0x02
    38 00000131 00006683C40C       
    39                                  
    40                                  
    41                                      ; 処理の終了
    42 00000137 EBFE                        jmp $
    43                                  
    44 00000139 2048656C6C6F2C206B-     .s0 db " Hello, kernel! ", 0
    44 00000142 65726E656C212000   
    45                                  
    46 0000014A 00<rep 2h>              ALIGN 4, db 0
    47 0000014C 00000000                FONT_ADR: dd 0
    48                                  
    49                                  ; モジュール
    50                                  %include "../modules/protect/vga.s"
    51                              <1> vga_set_read_plane:     ; void vga_set_read_plane(plane);
    52                              <1> ; plane: 読み込みプレーン
    53 00000150 55                  <1>     push ebp
    54 00000151 89E5                <1>     mov ebp, esp
    55                              <1> 
    56 00000153 6650                <1>     push ax
    57 00000155 6652                <1>     push dx
    58                              <1> 
    59                              <1> 
    60                              <1>     ; 読み込みプレーンの選択
    61 00000157 8A6508              <1>     mov ah, [ebp + 8]   ; 3=輝度, 2～0=RGB
    62 0000015A 80E403              <1>     and ah, 0x03        ; 余計なビットをマスク
    63 0000015D B004                <1>     mov al, 0x04        ; 読み込みマップ選択レジスタ
    64 0000015F 66BACE03            <1>     mov dx, 0x03CE      ; グラフィックス制御ポート
    65 00000163 66EF                <1>     out dx, ax
    66                              <1> 
    67 00000165 665A                <1>     pop dx
    68 00000167 6658                <1>     pop ax
    69                              <1> 
    70 00000169 89EC                <1>     mov esp, ebp
    71 0000016B 5D                  <1>     pop ebp
    72                              <1> 
    73 0000016C C3                  <1>     ret
    74                              <1> 
    75                              <1> vga_set_write_plane:    ; void vga_set_write_plane(plane);
    76                              <1> ; plane 書き込みプレーン
    77 0000016D 55                  <1>     push ebp
    78 0000016E 89E5                <1>     mov ebp, esp
    79                              <1> 
    80 00000170 6650                <1>     push ax
    81 00000172 6652                <1>     push dx
    82                              <1> 
    83                              <1> 
    84                              <1>     ; 書き込みプレーンの選択
    85 00000174 8A6508              <1>     mov ah, [ebp + 8]   ; ah = 書き込みプレーン
    86 00000177 80E40F              <1>     and ah, 0x0F        ; 余計なビットをマスク
    87 0000017A B002                <1>     mov al, 0x02        ; マップマスクレジスタ（書き込みプレーンを指定）
    88 0000017C 66BAC403            <1>     mov dx, 0x03C4      ; シーケンサ制御ポート
    89 00000180 66EF                <1>     out dx, ax
    90                              <1> 
    91                              <1> 
    92 00000182 665A                <1>     pop dx
    93 00000184 6658                <1>     pop ax
    94                              <1> 
    95 00000186 89EC                <1>     mov esp, ebp
    96 00000188 5D                  <1>     pop ebp
    97                              <1> 
    98 00000189 C3                  <1>     ret
    99                              <1> 
   100                              <1> vram_font_copy:         ; void vram_font_copy(font, vram, plane, color);
   101                              <1> ; font FONTアドレス
   102                              <1> ; vram VRAMアドレス
   103                              <1> ; plane 出力プレーン（1つのプレーンのみをビットで指定）
   104                              <1> ; color 描画色 背景色(----IRGB):前景色(---TIRGB) T=透過, I=輝度
   105 0000018A 55                  <1>     push ebp
   106 0000018B 89E5                <1>     mov ebp, esp
   107                              <1>     
   108 0000018D 50                  <1>     push eax
   109 0000018E 53                  <1>     push ebx
   110 0000018F 51                  <1>     push ecx
   111 00000190 52                  <1>     push edx
   112 00000191 57                  <1>     push edi
   113 00000192 56                  <1>     push esi
   114                              <1> 
   115 00000193 8B7508              <1>     mov esi, [ebp + 8]          ; font
   116 00000196 8B7D0C              <1>     mov edi, [ebp + 12]         ; vram
   117 00000199 0FB64510            <1>     movzx eax, byte [ebp + 16]  ; plane
   118 0000019D 0FB75D14            <1>     movzx ebx, word [ebp + 20]  ; color
   119                              <1>     ; bh = 背景色 bl = 前景色
   120                              <1> 
   121 000001A1 84C7                <1>     test bh, al     ; zf = (背景色 & プレーン）
   122 000001A3 0F94C6              <1>     setz dh         ; dh = zf
   123 000001A6 FECE                <1>     dec dh          ; 背景色が含まれる：dh = 0xFF, 含まれない：dh = 0x00
   124                              <1> 
   125 000001A8 84C3                <1>     test bl, al     ; zf = （前景色 & プレーン）
   126 000001AA 0F94C2              <1>     setz dl         ; dl = zf
   127 000001AD FECA                <1>     dec dl          ; 前景色が含まれる：dl = 0xFF, 含まれない：dl = 0x00
   128                              <1> 
   129                              <1>     ; 16ドットフォントのコピー
   130 000001AF FC                  <1>     cld             ; アドレス加算モード
   131                              <1> 
   132 000001B0 B910000000          <1>     mov ecx, 16
   133                              <1> .10L:
   134                              <1>     ; フォントマスクの作成
   135 000001B5 AC                  <1>     lodsb           ; al = *(esi++) // フォントデータ1ビット分
   136 000001B6 88C4                <1>     mov ah, al      ; ah ~= al      // !フォントデータ
   137 000001B8 F6D4                <1>     not ah
   138                              <1> 
   139                              <1>     ; 前景色
   140 000001BA 20D0                <1>     and al, dl      ; al = プレーン&前景色ありorなし
   141                              <1> 
   142                              <1>     ; 背景色
   143 000001BC F7C310000000        <1>     test ebx, 0x0010    ; if(透過on) zf = 0; else zf = 1;
   144 000001C2 7404                <1>     jz .11F
   145                              <1>     ; 透過on
   146 000001C4 2227                <1>     and ah, [edi]       ; 現在のデータでフォントデータをマスク
   147 000001C6 EB02                <1>     jmp .11E
   148                              <1> .11F:                   ; 透過off
   149 000001C8 20F4                <1>     and ah, dh          ; if(背景色なし) ah = 0;
   150                              <1> .11E:
   151                              <1>     
   152                              <1>     ; 前景色と背景色を合成
   153 000001CA 08E0                <1>     or al, ah           ; al = 背景 | 前景
   154                              <1> 
   155                              <1>     ; 新しい値を出力
   156 000001CC 8807                <1>     mov [edi], al
   157                              <1> 
   158 000001CE 83C750              <1>     add edi, 80      ; 1行すすめる
   159 000001D1 E2E2                <1>     loop .10L
   160                              <1> .10E:
   161                              <1> 
   162 000001D3 5E                  <1>     pop esi
   163 000001D4 5F                  <1>     pop edi
   164 000001D5 5A                  <1>     pop edx
   165 000001D6 59                  <1>     pop ecx
   166 000001D7 5B                  <1>     pop ebx
   167 000001D8 58                  <1>     pop eax
   168                              <1> 
   169 000001D9 89EC                <1>     mov esp, ebp
   170 000001DB 5D                  <1>     pop ebp
   171                              <1> 
   172 000001DC C3                  <1>     ret
   173                              <1> 
   174                              <1> vram_bit_copy:         ; void vram_bit_copy(bit, vram, plane, color);
   175                              <1> ; bitデータ
   176                              <1> ; vram VRAMアドレス
   177                              <1> ; plane 出力プレーン（1つのプレーンのみをビットで指定）
   178                              <1> ; color 描画色 前景色(--------_----IRGB) I=輝度
   179 000001DD 55                  <1>     push ebp
   180 000001DE 89E5                <1>     mov ebp, esp
   181                              <1>     
   182 000001E0 50                  <1>     push eax
   183 000001E1 53                  <1>     push ebx
   184 000001E2 52                  <1>     push edx
   185 000001E3 57                  <1>     push edi
   186                              <1> 
   187 000001E4 8B7D0C              <1>     mov edi, [ebp + 12]         ; vram
   188 000001E7 0FB64510            <1>     movzx eax, byte [ebp + 16]  ; plane
   189 000001EB 0FB75D14            <1>     movzx ebx, word [ebp + 20]  ; color
   190                              <1>     ; bl = 前景色
   191                              <1> 
   192                              <1>     ; 常に透過モード
   193 000001EF 84C3                <1>     test bl, al     ; zf = （前景色 & プレーン）
   194 000001F1 0F94C3              <1>     setz bl         ; dl = zf
   195 000001F4 FECB                <1>     dec bl          ; 前景色が含まれる：dl = 0xFF, 含まれない：dl = 0x00
   196                              <1> 
   197                              <1>     ; マスク
   198 000001F6 8A4508              <1>     mov al, [ebp + 8]   ; bit
   199 000001F9 88C4                <1>     mov ah, al      ; ah ~= al
   200 000001FB F6D4                <1>     not ah
   201                              <1> 
   202 000001FD 2227                <1>     and ah, [edi]       ; !出力ビットパターン & 現在値 出力ビットだけ0 背景
   203 000001FF 20D8                <1>     and al, bl          ;  出力ビットパターン & 表示色 前景
   204 00000201 08E0                <1>     or al, ah           ; 背景と前景を合成
   205 00000203 8807                <1>     mov [edi], al       ; プレーンに書き込み
   206                              <1>     
   207                              <1> 
   208 00000205 5F                  <1>     pop edi
   209 00000206 5A                  <1>     pop edx
   210 00000207 5B                  <1>     pop ebx
   211 00000208 58                  <1>     pop eax
   212                              <1> 
   213 00000209 89EC                <1>     mov esp, ebp
   214 0000020B 5D                  <1>     pop ebp
   215                              <1> 
   216 0000020C C3                  <1>     ret
    51                                  %include "../modules/protect/draw_char.s"
    52                              <1> draw_char:      ; void draw_char(col, row, color, ch);
    53                              <1> ; col 列（0～79）
    54                              <1> ; row 行（0～29）
    55                              <1> ; color 描画色 背景色(----IRGB):前景色(---TIRGB) T=透過, I=輝度
    56                              <1> ; ch 文字
    57                              <1> 
    58 0000020D 55                  <1>     push ebp
    59 0000020E 89E5                <1>     mov ebp, esp
    60                              <1> 
    61 00000210 53                  <1>     push ebx
    62 00000211 56                  <1>     push esi
    63 00000212 57                  <1>     push edi
    64                              <1> 
    65                              <1>     ; コピー元フォントアドレスを設定
    66 00000213 0FB67514            <1>     movzx esi, byte [ebp +20]  ; esi = ch
    67 00000217 C1E604              <1>     shl esi, 4                  ; ch * 16   1文字16バイト
    68 0000021A 0335[4C010000]      <1>     add esi, [FONT_ADR]         ; ESI = フォントアドレス
    69                              <1> 
    70                              <1>     ; コピー先アドレスを取得
    71                              <1>     ; adr = 0xA0000 + (640 / 8 * 16) * y + x
    72                              <1>     ;               16行(1文字の高さ）  *  縦位置 + 横位置
    73 00000220 8B7D0C              <1>     mov edi, [ebp +12]                  ; Y
    74 00000223 C1E708              <1>     shl edi, 8
    75 00000226 8DBCBF00000A00      <1>     lea edi, [edi * 4 + edi + 0xA0000]  ; Y * 16行
    76 0000022D 037D08              <1>     add edi, [ebp + 8]                  ; edi += X
    77                              <1> 
    78                              <1>     ; 1文字分のフォントを出力
    79 00000230 0FB75D10            <1>     movzx ebx, word [ebp +16]           ; 表示色
    80                              <1> 
    81                              <1>     ; 輝度I
    82 00000234 6A03E815FFFFFF6683- <1>     cdecl vga_set_read_plane, 0x03      ; 輝度プレーン
    82 0000023D C404                <1>
    83 0000023F 6A08E827FFFFFF6683- <1>     cdecl vga_set_write_plane, 0x08     ; 輝度プレーン
    83 00000248 C404                <1>
    84 0000024A 536A085756E836FFFF- <1>     cdecl vram_font_copy, esi, edi, 0x08, ebx
    84 00000253 FF6683C410          <1>
    85                              <1> 
    86                              <1>     ; 赤R
    87 00000258 6A02E8F1FEFFFF6683- <1>     cdecl vga_set_read_plane, 0x02      ; 赤プレーン
    87 00000261 C404                <1>
    88 00000263 6A04E803FFFFFF6683- <1>     cdecl vga_set_write_plane, 0x04     ; 赤輝度プレーン
    88 0000026C C404                <1>
    89 0000026E 536A045756E812FFFF- <1>     cdecl vram_font_copy, esi, edi, 0x04, ebx
    89 00000277 FF6683C410          <1>
    90                              <1> 
    91                              <1>     ; 緑G
    92 0000027C 6A01E8CDFEFFFF6683- <1>     cdecl vga_set_read_plane, 0x01      ; 緑プレーン
    92 00000285 C404                <1>
    93 00000287 6A02E8DFFEFFFF6683- <1>     cdecl vga_set_write_plane, 0x02     ; 緑プレーン
    93 00000290 C404                <1>
    94 00000292 536A025756E8EEFEFF- <1>     cdecl vram_font_copy, esi, edi, 0x02, ebx
    94 0000029B FF6683C410          <1>
    95                              <1> 
    96                              <1>     ; 青B
    97 000002A0 6A00E8A9FEFFFF6683- <1>     cdecl vga_set_read_plane, 0x00      ; 青プレーン
    97 000002A9 C404                <1>
    98 000002AB 6A01E8BBFEFFFF6683- <1>     cdecl vga_set_write_plane, 0x01     ; 青プレーン
    98 000002B4 C404                <1>
    99 000002B6 536A015756E8CAFEFF- <1>     cdecl vram_font_copy, esi, edi, 0x01, ebx
    99 000002BF FF6683C410          <1>
   100                              <1> 
   101 000002C4 5F                  <1>     pop edi
   102 000002C5 5E                  <1>     pop esi
   103 000002C6 5B                  <1>     pop ebx
   104                              <1> 
   105 000002C7 89EC                <1>     mov esp, ebp
   106 000002C9 5D                  <1>     pop ebp
   107                              <1> 
   108 000002CA C3                  <1>     ret
    52                                  %include "../modules/protect/draw_font.s"
    53                              <1> draw_font:  ; void draw_font(col, row);
    54                              <1> ; col 列
    55                              <1> ; row 行
    56 000002CB 55                  <1>     push ebp
    57 000002CC 89E5                <1>     mov ebp, esp
    58                              <1> 
    59 000002CE 50                  <1>     push eax
    60 000002CF 53                  <1>     push ebx
    61 000002D0 51                  <1>     push ecx
    62 000002D1 57                  <1>     push edi
    63 000002D2 56                  <1>     push esi
    64                              <1> 
    65                              <1> 
    66 000002D3 8B7508              <1>     mov esi, [ebp + 8]  ; x
    67 000002D6 8B7D0C              <1>     mov edi, [ebp +12]  ; y
    68                              <1> 
    69 000002D9 B900000000          <1>     mov ecx, 0
    70                              <1> .10L:
    71 000002DE 81F900010000        <1>     cmp ecx, 256
    72 000002E4 731F                <1>     jae .10E
    73                              <1> 
    74 000002E6 89C8                <1>     mov eax, ecx
    75 000002E8 83E00F              <1>     and eax, 0x0F   ; eax = 繰り返し回数の下位4ビット
    76 000002EB 01F0                <1>     add eax, esi    ; eax += x
    77                              <1> 
    78 000002ED 89CB                <1>     mov ebx, ecx
    79 000002EF C1EB04              <1>     shr ebx, 4      ; eax = 繰り返し回数/16
    80 000002F2 01FB                <1>     add ebx, edi    ; ebx += y
    81                              <1> 
    82 000002F4 516A075350E80FFFFF- <1>     cdecl draw_char, eax, ebx, 0x07, ecx
    82 000002FD FF6683C410          <1>
    83                              <1> 
    84 00000302 41                  <1>     inc ecx
    85 00000303 EBD9                <1>     jmp .10L
    86                              <1> .10E:
    87                              <1> 
    88 00000305 5E                  <1>     pop esi
    89 00000306 5F                  <1>     pop edi
    90 00000307 59                  <1>     pop ecx
    91 00000308 5B                  <1>     pop ebx
    92 00000309 58                  <1>     pop eax
    93                              <1> 
    94 0000030A 89EC                <1>     mov esp, ebp
    95 0000030C 5D                  <1>     pop ebp
    96                              <1> 
    97 0000030D C3                  <1>     ret
    53                                  %include "../modules/protect/draw_str.s"
    54                              <1> draw_str:   ;void draw_str(col, row, color, p);
    55                              <1> ; col: 列
    56                              <1> ; row: 行
    57                              <1> ; color: 描画色
    58                              <1> ; p: 文字列のアドレス
    59 0000030E 55                  <1>     push ebp
    60 0000030F 89E5                <1>     mov ebp, esp
    61                              <1> 
    62 00000311 50                  <1>     push eax
    63 00000312 53                  <1>     push ebx
    64 00000313 51                  <1>     push ecx
    65 00000314 52                  <1>     push edx
    66 00000315 56                  <1>     push esi
    67                              <1> 
    68                              <1> 
    69 00000316 8B4D08              <1>     mov ecx, [ebp + 8]  ; col
    70 00000319 8B550C              <1>     mov edx, [ebp +12]  ; row
    71 0000031C 0FB75D10            <1>     movzx ebx, word [ebp + 16] ; color
    72 00000320 8B7514              <1>     mov esi, [ebp +20]  ; p
    73                              <1> 
    74 00000323 FC                  <1>     cld
    75                              <1> .10L:
    76 00000324 AC                  <1>     lodsb
    77 00000325 3C00                <1>     cmp al, 0
    78 00000327 7425                <1>     je .10E
    79                              <1> 
    80 00000329 50535251E8DBFEFFFF- <1>     cdecl draw_char, ecx, edx, ebx, eax
    80 00000332 6683C410            <1>
    81                              <1> 
    82 00000336 41                  <1>     inc ecx
    83 00000337 83F950              <1>     cmp ecx, 80
    84 0000033A 7C10                <1>     jl .12E         ; 横はみ出してなければgoto .12E
    85 0000033C B900000000          <1>     mov ecx, 0      ; はみ出してれば次の行へ
    86 00000341 42                  <1>     inc edx
    87 00000342 83FA1E              <1>     cmp edx, 30
    88 00000345 7C05                <1>     jl .12E         ; 縦はみ出してなければgoto .12E
    89 00000347 BA00000000          <1>     mov edx, 0      ; はみ出してれば左上に戻る
    90                              <1> .12E:
    91 0000034C EBD6                <1>     jmp .10L
    92                              <1> .10E:
    93                              <1> 
    94 0000034E 5E                  <1>     pop esi
    95 0000034F 5A                  <1>     pop edx
    96 00000350 59                  <1>     pop ecx
    97 00000351 5B                  <1>     pop ebx
    98 00000352 58                  <1>     pop eax
    99                              <1> 
   100 00000353 89EC                <1>     mov esp, ebp
   101 00000355 5D                  <1>     pop ebp
   102                              <1> 
   103 00000356 C3                  <1>     ret
    54                                  %include "../modules/protect/draw_color_bar.s"
    55                              <1> draw_color_bar:     ; void draw_color_bar(col, row);
    56                              <1> ; col: 列
    57                              <1> ; row: 行
    58 00000357 55                  <1>     push ebp
    59 00000358 89E5                <1>     mov ebp, esp
    60                              <1> 
    61 0000035A 50                  <1>     push eax
    62 0000035B 53                  <1>     push ebx
    63 0000035C 51                  <1>     push ecx
    64 0000035D 52                  <1>     push edx
    65 0000035E 56                  <1>     push esi
    66 0000035F 57                  <1>     push edi
    67                              <1> 
    68                              <1> 
    69 00000360 8B7508              <1>     mov esi, [ebp + 8]      ; x
    70 00000363 8B7D0C              <1>     mov edi, [ebp +12]      ; y
    71                              <1> 
    72                              <1>     ; カラーバーを表示
    73 00000366 B900000000          <1>     mov ecx, 0
    74                              <1> .10L:
    75 0000036B 83F910              <1>     cmp ecx, 16
    76 0000036E 732E                <1>     jae .10E
    77                              <1> 
    78                              <1>     ; 一回で8文字
    79 00000370 89C8                <1>     mov eax, ecx
    80 00000372 83E001              <1>     and eax, 0x01
    81 00000375 C1E003              <1>     shl eax, 3
    82 00000378 01F0                <1>     add eax, esi    ; col
    83                              <1> 
    84                              <1>     ; 2回に1回改行
    85 0000037A 89CB                <1>     mov ebx, ecx
    86 0000037C D1EB                <1>     shr ebx, 1
    87 0000037E 01FB                <1>     add ebx, edi    ; row
    88                              <1> 
    89                              <1>     ; 背景色を2色見たら下位次の行
    90 00000380 89CA                <1>     mov edx, ecx
    91 00000382 D1E2                <1>     shl edx, 1
    92 00000384 8B92[B1030000]      <1>     mov edx, [.t0 + edx]    ; color
    93                              <1> 
    94 0000038A 68[A8030000]525350- <1>     cdecl draw_str, eax, ebx, edx, .s0
    94 00000392 E877FFFFFF6683C410  <1>
    95                              <1> 
    96 0000039B 41                  <1>     inc ecx
    97 0000039C EBCD                <1>     jmp .10L
    98                              <1> .10E:
    99                              <1> 
   100 0000039E 5F                  <1>     pop edi
   101 0000039F 5E                  <1>     pop esi
   102 000003A0 5A                  <1>     pop edx
   103 000003A1 59                  <1>     pop ecx
   104 000003A2 5B                  <1>     pop ebx
   105 000003A3 58                  <1>     pop eax
   106                              <1> 
   107 000003A4 89EC                <1>     mov esp, ebp
   108 000003A6 5D                  <1>     pop ebp
   109                              <1> 
   110 000003A7 C3                  <1>     ret
   111                              <1> 
   112                              <1> 
   113 000003A8 202020202020202000  <1> .s0: db '        ', 0
   114                              <1> 
   115                              <1> .t0:
   116 000003B1 00000008            <1>     dw 0x0000, 0x0800
   117 000003B5 00010009            <1>     dw 0x0100, 0x0900
   118 000003B9 0002000A            <1>     dw 0x0200, 0x0A00
   119 000003BD 0003000B            <1>     dw 0x0300, 0x0B00
   120 000003C1 0004000C            <1>     dw 0x0400, 0x0C00
   121 000003C5 0005000D            <1>     dw 0x0500, 0x0D00
   122 000003C9 0006000E            <1>     dw 0x0600, 0x0E00
   123 000003CD 0007000F            <1>     dw 0x0700, 0x0F00
    55                                  %include "../modules/protect/draw_pixel.s"
    56                              <1> draw_pixel:     ; void draw_pixel(x, y, color);
    57                              <1> ; x: X座標
    58                              <1> ; y: Y座標
    59                              <1> ; color: 描画色
    60 000003D1 55                  <1>     push ebp
    61 000003D2 89E5                <1>     mov ebp, esp
    62                              <1> 
    63 000003D4 50                  <1>     push eax
    64 000003D5 53                  <1>     push ebx
    65 000003D6 51                  <1>     push ecx
    66 000003D7 57                  <1>     push edi
    67                              <1> 
    68                              <1> 
    69                              <1> 
    70                              <1>     ; y座標*80->y*(640/8)
    71 000003D8 8B7D0C              <1>     mov edi, [ebp +12]
    72 000003DB C1E704              <1>     shl edi, 4
    73 000003DE 8DBCBF00000A00      <1>     lea edi, [edi * 4 + edi + 0x0A_0000]
    74                              <1> 
    75                              <1>     ; x座標/8  8pixel単位の位置
    76 000003E5 8B5D08              <1>     mov ebx, [ebp + 8]
    77 000003E8 89D9                <1>     mov ecx, ebx
    78 000003EA C1EB03              <1>     shr ebx, 3
    79 000003ED 01DF                <1>     add edi, ebx
    80                              <1> 
    81                              <1>     ; x座標を8で割った余りからビット位置を計算
    82                              <1>     ; 8pixel中の位置
    83                              <1>     ; 0=0b1000_0000, 1=0b0100_0000, ... , 7=0b0000_0001
    84 000003EF 83E107              <1>     and ecx, 0x07   ; 下位3ビットは8で割ったときの余り
    85 000003F2 BB80000000          <1>     mov ebx, 0x80
    86 000003F7 D3EB                <1>     shr ebx, cl
    87                              <1> 
    88 000003F9 8B4D10              <1>     mov ecx, [ebp +16]
    89                              <1> 
    90                              <1>     ; プレーンごとに出力
    91 000003FC 6A03E84DFDFFFF6683- <1>     cdecl vga_set_read_plane, 0x03              ; 輝度（I）プレーンを選択
    91 00000405 C404                <1>
    92 00000407 6A08E85FFDFFFF6683- <1>     cdecl vga_set_write_plane, 0x08             ; 輝度（I）プレーンを選択
    92 00000410 C404                <1>
    93 00000412 516A085753E8C1FDFF- <1>     cdecl vram_bit_copy, ebx, edi, 0x08, ecx 
    93 0000041B FF6683C410          <1>
    94                              <1> 
    95 00000420 6A02E829FDFFFF6683- <1>     cdecl vga_set_read_plane, 0x02              ; Rプレーンを選択
    95 00000429 C404                <1>
    96 0000042B 6A04E83BFDFFFF6683- <1>     cdecl vga_set_write_plane, 0x04             ; Rプレーンを選択
    96 00000434 C404                <1>
    97 00000436 516A045753E89DFDFF- <1>     cdecl vram_bit_copy, ebx, edi, 0x04, ecx 
    97 0000043F FF6683C410          <1>
    98                              <1> 
    99 00000444 6A01E805FDFFFF6683- <1>     cdecl vga_set_read_plane, 0x01              ; Gプレーンを選択
    99 0000044D C404                <1>
   100 0000044F 6A02E817FDFFFF6683- <1>     cdecl vga_set_write_plane, 0x02             ; Gプレーンを選択
   100 00000458 C404                <1>
   101 0000045A 516A025753E879FDFF- <1>     cdecl vram_bit_copy, ebx, edi, 0x02, ecx 
   101 00000463 FF6683C410          <1>
   102                              <1> 
   103 00000468 6A00E8E1FCFFFF6683- <1>     cdecl vga_set_read_plane, 0x00              ; Bプレーンを選択
   103 00000471 C404                <1>
   104 00000473 6A01E8F3FCFFFF6683- <1>     cdecl vga_set_write_plane, 0x01             ; Bプレーンを選択
   104 0000047C C404                <1>
   105 0000047E 516A015753E855FDFF- <1>     cdecl vram_bit_copy, ebx, edi, 0x01, ecx 
   105 00000487 FF6683C410          <1>
   106                              <1> 
   107 0000048C 5F                  <1>     pop edi
   108 0000048D 59                  <1>     pop ecx
   109 0000048E 5B                  <1>     pop ebx
   110 0000048F 58                  <1>     pop eax
   111                              <1> 
   112 00000490 89EC                <1>     mov esp, ebp
   113 00000492 5D                  <1>     pop ebp
   114                              <1> 
   115 00000493 C3                  <1>     ret
    56                                  
    57                                  ;パディング
    58 00000494 00<rep 1B6Ch>               times KERNEL_SIZE - ($ - $$) db 0
    59                                  
