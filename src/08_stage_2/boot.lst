     1                                      BOOT_LOAD   equ 0x7c00  ; ブートプログラムのロード位置
     2                                      ORG BOOT_LOAD           ; ロードアドレスをアセンブラに指示
     3                                  
     4                                  ; マクロ
     5                                  %include "../include/macro.s"   ; C言語と同等の関数呼び出し
     6                              <1> ; C言語と同等の関数呼び出し
     7                              <1> %macro cdecl 1-*.nolist ; 可変引数, リスト出力の抑止
     8                              <1> 
     9                              <1>     %rep %0 - 1         ; 引数の数-1回
    10                              <1>         push %{-1:-1}   ; 一番最後の引数
    11                              <1>         %rotate -1      ; 一番最後の引数を先頭に移動
    12                              <1>     %endrep
    13                              <1>     %rotate -1      ; 回転をもとに戻す
    14                              <1> 
    15                              <1>     call %1         ; 第１引数を呼び出し
    16                              <1> 
    17                              <1>     %if 1 < %0
    18                              <1>         add sp, (__BITS__ >> 3) * (%0 - 1)  ; cpuのbyte数(bit数/8) * 引数の数-1
    19                              <1>     %endif
    20                              <1> %endmacro
     6                                  
     7                                  entry:
     8 00000000 EB58                        jmp ipl      ; jump to ipl
     9                                  
    10                                      ; BPB(BIOS Parameter Block
    11 00000002 90<rep 58h>                 times 90 - ($ - $$) db 0x90
    12                                  
    13                                  
    14                                      ; IPL(Initial Program Loader)
    15                                  ipl:
    16 0000005A FA                          cli         ; clear interrupu flag 割込み禁止
    17                                  
    18                                  
    19 0000005B B80000                      mov ax, 0x0000
    20 0000005E 8ED8                        mov ds, ax
    21 00000060 8EC0                        mov es, ax
    22 00000062 8ED0                        mov ss, ax
    23 00000064 BC007C                      mov sp, BOOT_LOAD
    24                                      
    25 00000067 FB                          sti         ; set interrupt flag 割り込み許可
    26                                  
    27 00000068 8816[B800]                  mov [BOOT.DRIVE], dl    ; ブートドライブの番号(DL)を保存
    28                                  
    29 0000006C 68[9800]E8480083C4-         cdecl puts, .s0
    29 00000074 02                 
    30                                  
    31                                      ; 次の512バイトを読み込む
    32 00000075 B402                        mov ah, 0x02            ; セクタ読み出し
    33 00000077 B001                        mov al, 0x01            ; 読み込みセクタ数
    34 00000079 B90200                      mov cx, 0x0002          ; シリンダ/セクタ
    35 0000007C B600                        mov dh, 0x00            ; ヘッド位置
    36 0000007E 8A16[B800]                  mov dl, [BOOT.DRIVE]    ; ドライブ番号
    37 00000082 BB007E                      mov bx, 0x7C00 + 512    ; 読み込み先オフセット
    38 00000085 CD13                        int 0x13
    39                                  
    40                                  .10Q:
    41 00000087 730C                        jnc .10E
    42                                  .10T:
    43 00000089 68[A500]E82B0083C4-         cdecl puts, .e0
    43 00000091 02                 
    44 00000092 E8C400                      cdecl reboot            ; 戻ってこない
    45                                  .10E:
    46 00000095 E96801                      jmp stage_2
    47                                  
    48                                  
    49                                  ; Data
    50 00000098 426F6F74696E672E2E-     .s0 db "Booting...", 0x0A, 0x0D, 0x00
    50 000000A1 2E0A0D00           
    51 000000A5 4572726F723A736563-     .e0 db "Error:sector read", 0
    51 000000AE 746F72207265616400 
    52                                  
    53 000000B7 00                      ALIGN 2, db 0
    54                                  BOOT:           ; ブートドライブ関係の情報
    55 000000B8 0000                    .DRIVE: dw 0    ; ドライブ番号
    56                                  
    57                                  ; モジュール
    58                                  %include "../modules/real/puts.s"
    59                              <1> puts:       ; void puts(str);
    60 000000BA 55                  <1>     push bp
    61 000000BB 89E5                <1>     mov bp, sp
    62                              <1> 
    63 000000BD 50                  <1>     push ax
    64 000000BE 53                  <1>     push bx
    65 000000BF 56                  <1>     push si
    66                              <1> 
    67 000000C0 8B7604              <1>     mov si, [bp + 4]    ; si=文字列のアドレス
    68                              <1> 
    69 000000C3 B40E                <1>     mov ah, 0x0E
    70 000000C5 BB0000              <1>     mov bx, 0x0000
    71 000000C8 FC                  <1>     cld
    72                              <1> 
    73                              <1> .10L:
    74 000000C9 AC                  <1>     lodsb
    75                              <1> 
    76 000000CA 3C00                <1>     cmp al, 0x00
    77 000000CC 7404                <1>     je .10E
    78                              <1> 
    79 000000CE CD10                <1>     int 0x10
    80 000000D0 EBF7                <1>     jmp .10L
    81                              <1> 
    82                              <1> .10E:
    83 000000D2 5E                  <1>     pop si
    84 000000D3 5B                  <1>     pop bx
    85 000000D4 58                  <1>     pop ax
    86                              <1> 
    87 000000D5 89EC                <1>     mov sp, bp
    88 000000D7 5D                  <1>     pop bp
    89                              <1> 
    90 000000D8 C3                  <1>     ret
    59                                  %include "../modules/real/itoa.s"
    60                              <1> itoa:       ; void itoa(num, buff, size, radix, flag);
    61                              <1> ; num   変換する値
    62                              <1> ; buff  保存先バッファアドレス
    63                              <1> ; size  保存先バッファサイズ
    64                              <1> ; radix 基数（2, 8, 10, 16)
    65                              <1> ; flags 
    66                              <1> ;   B2: 空白を'0'で埋める
    67                              <1> ;   B1: '+/-'記号を付加する
    68                              <1> ;   B0: 値を符号付き変数として扱う
    69                              <1> 
    70 000000D9 55                  <1>     push bp
    71 000000DA 89E5                <1>     mov bp, sp
    72                              <1> 
    73 000000DC 50                  <1>     push ax
    74 000000DD 53                  <1>     push bx
    75 000000DE 51                  <1>     push cx
    76 000000DF 52                  <1>     push dx
    77 000000E0 56                  <1>     push si
    78 000000E1 57                  <1>     push di
    79                              <1> 
    80                              <1> 
    81 000000E2 8B4604              <1>     mov ax, [bp + 4]    ; num
    82 000000E5 8B4E08              <1>     mov cx, [bp + 8]    ; size
    83 000000E8 8B7606              <1>     mov si, [bp + 6]    ; buff
    84                              <1> 
    85 000000EB 89F7                <1>     mov di, si
    86 000000ED 01CF                <1>     add di, cx
    87 000000EF 4F                  <1>     dec di              ; di = &si[cx-1]
    88                              <1> 
    89 000000F0 8B5E0C              <1>     mov bx, word [bp + 12]   ; flags
    90                              <1> 
    91                              <1>     ; 符号付き判定
    92 000000F3 F7C30100            <1>     test bx, 0b0001     ; 論理積を計算、0ならZFをセット
    93                              <1> .10Q:
    94 000000F7 7408                <1>     je .10E         ; E=Exit
    95 000000F9 83F800              <1>     cmp ax, 0
    96                              <1> .12Q:
    97 000000FC 7D03                <1>     jge .12E
    98 000000FE 83CB02              <1>     or bx, 0b0010
    99                              <1> .12E:
   100                              <1> .10E:
   101                              <1> 
   102                              <1>     ; 符号出力判定
   103 00000101 F7C30200            <1>     test bx, 0b0010
   104                              <1> .20Q:
   105 00000105 7410                <1>     je .20E
   106 00000107 83F800              <1>     cmp ax, 0
   107                              <1> .22Q:
   108 0000010A 7D07                <1>     jge .22F
   109 0000010C F7D8                <1>     neg ax
   110 0000010E C6042D              <1>     mov [si], byte '-'
   111 00000111 EB03                <1>     jmp .22E
   112                              <1> .22F:
   113                              <1>     
   114 00000113 C6042B              <1>     mov [si], byte '+'
   115                              <1> .22E:
   116 00000116 49                  <1>     dec cx
   117                              <1> .20E:
   118                              <1> 
   119                              <1>     ; ASCII変換
   120 00000117 8B5E0A              <1>     mov bx, [bp + 10]   ; radix(基数)
   121                              <1> .30L:
   122 0000011A BA0000              <1>     mov dx, 0
   123 0000011D F7F3                <1>     div bx      ; 商：ax, あまり: dx
   124                              <1> 
   125 0000011F 89D6                <1>     mov si, dx
   126 00000121 8A94[4901]          <1>     mov dl, byte [.ascii + si]
   127                              <1> 
   128 00000125 8815                <1>     mov [di], dl
   129 00000127 4F                  <1>     dec di
   130                              <1> 
   131 00000128 83F800              <1>     cmp ax, 0
   132 0000012B E0ED                <1>     loopnz .30L
   133                              <1> .30E:
   134                              <1> 
   135 0000012D 83F900              <1>     cmp cx, 0
   136                              <1> .40Q:
   137 00000130 740D                <1>     je .40E
   138 00000132 B020                <1>     mov al, ' '
   139 00000134 837E0C04            <1>     cmp [bp + 12], word 0b0100
   140                              <1> .42Q:
   141 00000138 7502                <1>     jne .42E
   142 0000013A B030                <1>     mov al, '0'
   143                              <1> .42E:
   144 0000013C FD                  <1>     std         ; dimention flag = 1(-方向)
   145 0000013D F3AA                <1>     rep stosb   ; while (--cx) *di-- = al;
   146                              <1> .40E:
   147                              <1> 
   148 0000013F 5F                  <1>     pop di
   149 00000140 5E                  <1>     pop si
   150 00000141 5A                  <1>     pop dx
   151 00000142 59                  <1>     pop cx
   152 00000143 5B                  <1>     pop bx
   153 00000144 58                  <1>     pop ax
   154                              <1> 
   155 00000145 89EC                <1>     mov sp, bp
   156 00000147 5D                  <1>     pop bp
   157                              <1> 
   158 00000148 C3                  <1>     ret
   159                              <1> 
   160 00000149 303132333435363738- <1> .ascii db "0123456789ABCDEF"    ; 変換テーブル
   160 00000152 39414243444546      <1>
    60                                  %include "../modules/real/reboot.s"
    61                              <1> reboot:
    62 00000159 68[7501]E85BFF83C4- <1>     cdecl puts, .s0
    62 00000161 02                  <1>
    63                              <1> 
    64                              <1> .10L:
    65 00000162 B410                <1>     mov ah, 0x10
    66 00000164 CD16                <1>     int 0x16
    67                              <1> 
    68 00000166 3C20                <1>     cmp al, ' '
    69 00000168 75F8                <1>     jne .10L
    70                              <1> 
    71 0000016A 68[9301]E84AFF83C4- <1>     cdecl puts, .s1
    71 00000172 02                  <1>
    72                              <1> 
    73 00000173 CD19                <1>     int 0x19
    74                              <1> 
    75 00000175 0A0D50757368205350- <1> .s0 db 0x0A, 0x0D, "Push SPACE key to reboot...", 0
    75 0000017E 414345206B65792074- <1>
    75 00000187 6F207265626F6F742E- <1>
    75 00000190 2E2E00              <1>
    76 00000193 0A0D0A0D00          <1> .s1 db 0x0A, 0x0D, 0x0A, 0x0D, 0
    61                                  
    62 00000198 00<rep 66h>                 times 510 - ($ - $$) db 0x00
    63 000001FE 55AA                        db 0x55, 0xAA
    64                                  
    65                                  
    66                                  
    67                                  ; ブート処理の第２ステージ
    68                                  stage_2:
    69 00000200 68[0B02]E8B4FE83C4-         cdecl puts, .s0
    69 00000208 02                 
    70 00000209 EBFE                        jmp $       ; while(1)
    71                                  
    72                                  ; Data
    73 0000020B 326E64207374616765-     .s0 db "2nd stage...", 0x0A, 0x0D, 0
    73 00000214 2E2E2E0A0D00       
    74                                  
    75                                  ; パディング(このファイルは8kBとする）
    76 0000021A 00<rep 1DE6h>               times (1024 * 8) -($ - $$) db 0 ; 8kB
